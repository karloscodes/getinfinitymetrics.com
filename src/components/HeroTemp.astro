<section class="py-16 md:py-24 bg-white">
  <div class="container">
    <div class="lg:flex lg:items-center lg:gap-12">
      <div class="lg:w-1/2 mb-10 lg:mb-0 text-center lg:text-left slide-in">
        <span
          class="inline-block px-3 py-1 bg-black bg-opacity-5 rounded-full text-sm font-medium mb-4"
        >
          Pay Once - Own Forever
        </span>
        <h1 class="text-4xl md:text-5xl font-black mb-6 text-black">
          Ask Your Data Anything, On Your Terms
        </h1>
        <p class="text-black mb-8 max-w-xl mx-auto lg:mx-0 text-base">
          A <span class="highlight">self-hosted analytics</span> platform with an
          <span class="highlight">AI assistant</span> for natural language queries.
          Gain insights directly from your data with <span class="highlight"
            >full control</span
          >, top <span class="highlight">privacy</span> and <span
            class="highlight">no ongoing costs</span
          >. Simple to maintain, always up-to-date, and built for speed.
        </p>
        <div
          class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start"
        >
          <a
            href="#pricing"
            class="btn-primary inline-block px-6 py-3 bg-black text-white rounded-md hover:bg-gray-800 transition-colors font-bold"
          >
            Get it now
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 ml-1 inline-block"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z"
                clip-rule="evenodd"></path>
            </svg>
          </a>
          <a
            href="#features"
            class="btn-secondary inline-block px-6 py-3 bg-white border border-black text-black rounded-md hover:bg-gray-50 transition-colors font-bold"
          >
            Learn more
          </a>
        </div>
      </div>
      <div class="lg:w-1/2">
        <div
          class="bg-white rounded-lg border border-black shadow-md overflow-hidden"
        >
          <div class="relative w-full">
            <div class="slideshow-container relative h-[500px]">
              <div
                class="slide absolute w-full h-full opacity-0 transition-opacity duration-1000 ease-in-out"
              >
                <img
                  src="/dashboard-preview.png"
                  alt="Infinity Metrics AI-Powered Analytics Dashboard"
                  class="w-full h-full object-contain cursor-zoom-in"
                />
                <div
                  class="absolute bottom-0 left-0 right-0 p-4 bg-white border-t border-black text-black text-center"
                >
                  <p class="text-sm font-bold">
                    Simple, effective analytics dashboard
                  </p>
                </div>
              </div>
              <div
                class="slide absolute w-full h-full opacity-0 transition-opacity duration-1000 ease-in-out"
              >
                <img
                  src="/ask-ai-1.png"
                  alt="Infinity Metrics AI Assistant Analytics Interface"
                  class="w-full h-full object-contain cursor-zoom-in"
                />
                <div
                  class="absolute bottom-0 left-0 right-0 p-4 bg-white border-t border-black text-black text-center"
                >
                  <p class="text-sm font-bold">
                    Ask your data questions using natural language
                  </p>
                </div>
              </div>
              <div
                class="slide absolute w-full h-full opacity-0 transition-opacity duration-1000 ease-in-out"
              >
                <img
                  src="/ask-ai-3.png"
                  alt="Infinity Metrics AI Assistant Analytics Interface"
                  class="w-full h-full object-contain cursor-zoom-in"
                />
                <div
                  class="absolute bottom-0 left-0 right-0 p-4 bg-white border-t border-black text-black text-center"
                >
                  <p class="text-sm font-bold">Ask about your funnels</p>
                </div>
              </div>
              <div
                class="slide absolute w-full h-full opacity-0 transition-opacity duration-1000 ease-in-out"
              >
                <img
                  src="/ask-ai-4.png"
                  alt="Infinity Metrics AI Assistant Analytics Interface"
                  class="w-full h-full object-contain cursor-zoom-in"
                />
                <div
                  class="absolute bottom-0 left-0 right-0 p-4 bg-white border-t border-black text-black text-center"
                >
                  <p class="text-sm font-bold">Ask common user patterns</p>
                </div>
              </div>
              <div
                class="slide absolute w-full h-full opacity-0 transition-opacity duration-1000 ease-in-out"
              >
                <img
                  src="/ask-ai-5.png"
                  alt="Infinity Metrics AI Assistant Analytics Interface"
                  class="w-full h-full object-contain cursor-zoom-in"
                />
                <div
                  class="absolute bottom-0 left-0 right-0 p-4 bg-white border-t border-black text-black text-center"
                >
                  <p class="text-sm font-bold">Ask your traffic</p>
                </div>
              </div>

              <!-- Navigation arrows -->
              <button
                class="absolute top-1/2 left-2 transform -translate-y-1/2 bg-black bg-opacity-30 hover:bg-opacity-50 text-white rounded-full w-8 h-8 flex items-center justify-center z-20"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="1.5"
                    d="M15 19l-7-7 7-7"></path>
                </svg>
              </button>
              <button
                class="absolute top-1/2 right-2 transform -translate-y-1/2 bg-black bg-opacity-30 hover:bg-opacity-50 text-white rounded-full w-8 h-8 flex items-center justify-center z-20"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="1.5"
                    d="M9 5l7 7-7 7"></path>
                </svg>
              </button>
            </div>

            <!-- Image zoom modal -->
            <div
              id="imageModal"
              class="fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 hidden"
            >
              <div class="relative max-w-[90%] max-h-[90%]">
                <img
                  id="zoomedImage"
                  src=""
                  alt="Zoomed image"
                  class="max-w-full max-h-[90vh] object-contain"
                />
                <button
                  class="absolute top-4 right-4 text-white bg-black bg-opacity-50 rounded-full p-2"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-6 w-6"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M6 18L18 6M6 6l12 12"></path>
                  </svg>
                </button>
              </div>
            </div>

            <div
              class="flex justify-center gap-3 py-3 absolute bottom-14 left-0 right-0 z-10"
            >
              <span
                class="dot w-3 h-3 bg-white bg-opacity-50 rounded-full cursor-pointer hover:bg-white transition-all"
              ></span>
              <span
                class="dot w-3 h-3 bg-white bg-opacity-50 rounded-full cursor-pointer hover:bg-white transition-all"
              ></span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Fix text display issues */
  section {
    overflow: visible;
  }

  h1,
  p,
  span,
  a {
    overflow: visible;
  }

  .slide p {
    padding-bottom: 4px;
  }
</style>

<script is:inline>
  let slideIndex = 1;
  let slideInterval;
  let isHovering = false;

  // Initialize the slideshow
  document.addEventListener("DOMContentLoaded", () => {
    showSlides(slideIndex);
    startSlideInterval();
    setupImageZoom();
    setupHoverPause();

    // Attach click handlers to navigation buttons
    document
      .querySelectorAll(".slideshow-container button")
      .forEach((button) => {
        if (button.innerHTML.includes("M15 19l-7-7 7-7")) {
          button.addEventListener("click", () => plusSlides(-1));
        } else if (button.innerHTML.includes("M9 5l7 7-7 7")) {
          button.addEventListener("click", () => plusSlides(1));
        }
      });

    // Attach click handlers to dots
    document.querySelectorAll(".dot").forEach((dot, index) => {
      dot.addEventListener("click", () => currentSlide(index + 1));
    });
  });

  // Start the auto-slide interval
  function startSlideInterval() {
    slideInterval = setInterval(() => {
      if (!isHovering) {
        plusSlides(1);
      }
    }, 15000); // Change slides every 15 seconds
  }

  // Setup zoom functionality
  function setupImageZoom() {
    const slides = document.querySelectorAll(".slide");
    const modal = document.getElementById("imageModal");
    const zoomedImage = document.getElementById("zoomedImage");

    slides.forEach((slide, index) => {
      const img = slide.querySelector("img");
      if (img) {
        img.addEventListener("click", () => {
          if (zoomedImage && modal && img instanceof HTMLImageElement) {
            // Make sure we're showing the currently visible slide's image
            const visibleSlide = document.querySelector(
              '.slide[style*="opacity: 1"]',
            );
            const visibleImg = visibleSlide
              ? visibleSlide.querySelector("img")
              : null;

            if (visibleImg instanceof HTMLImageElement) {
              zoomedImage.src = visibleImg.src;
              zoomedImage.alt = visibleImg.alt;
              modal.classList.remove("hidden");
              document.body.style.overflow = "hidden"; // Prevent scrolling
            }
          }
        });
      }
    });

    // Add event listener for the close button
    const closeButton = document.querySelector("#imageModal button");
    if (closeButton) {
      closeButton.addEventListener("click", closeModal);
    }
  }

  // Setup pause on hover
  function setupHoverPause() {
    const slideshowContainer = document.querySelector(".slideshow-container");

    if (slideshowContainer) {
      slideshowContainer.addEventListener("mouseenter", () => {
        isHovering = true;
      });

      slideshowContainer.addEventListener("mouseleave", () => {
        isHovering = false;
      });
    }
  }

  // Close the modal
  function closeModal() {
    const modal = document.getElementById("imageModal");
    if (modal) {
      modal.classList.add("hidden");
      document.body.style.overflow = ""; // Re-enable scrolling
    }
  }

  function plusSlides(n) {
    showSlides((slideIndex += n));
  }

  function currentSlide(n) {
    showSlides((slideIndex = n));
  }

  function showSlides(n) {
    let i;
    const slides = document.getElementsByClassName("slide");
    const dots = document.getElementsByClassName("dot");

    if (n > slides.length) {
      slideIndex = 1;
    }
    if (n < 1) {
      slideIndex = slides.length;
    }

    // Hide all slides
    for (i = 0; i < slides.length; i++) {
      const slide = slides[i];
      if (slide) {
        slide.style.opacity = "0";
      }
    }

    // Reset all dots
    for (i = 0; i < dots.length; i++) {
      dots[i].classList.remove("bg-gray-600");
    }

    // Show the current slide and highlight its dot
    const currentSlide = slides[slideIndex - 1];
    if (currentSlide) {
      currentSlide.style.opacity = "1";
    }

    if (dots[slideIndex - 1]) {
      dots[slideIndex - 1].classList.add("bg-gray-600");
    }
  }
</script>
