---
import "../styles/global.css";
import SEO from "../components/SEO.astro";
import Schema from "../components/Schema.astro";
import PreloadAssets from "../components/PreloadAssets.astro";
import type { BreadcrumbItem } from "../utils/breadcrumbs";

interface Props {
  title: string;
  description?: string;
  image?: string;
  canonical?: string;
  breadcrumbs?: BreadcrumbItem[];
}

const {
  title,
  description = "Users hand you their trust with their data. Don't betray them by shipping it to third parties! One-line installer. AI to fuel your curiosity beyond dashboards.",
  image = "https://getinfinitymetrics.com/InfinityMetrics%20128x720.png",
  canonical = Astro.url.href,
  breadcrumbs = [],
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="index, follow" />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- SEO -->
    <SEO
      title={title}
      description={description}
      image={image}
      canonical={canonical}
    />

    <!-- Preload Assets -->
    <PreloadAssets />

    <!-- Structured Data -->
    <Schema
      name={title}
      description={description}
      image={image}
      includeFAQ={Astro.url.pathname === "/"}
      breadcrumbs={breadcrumbs}
    />

    <!-- Fonts -->
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />

    <script async src="https://tally.so/widgets/embed.js"></script>
    <script defer src="https://t.getinfinitymetrics.com/y/api/v1/sdk.js"
    ></script>
  </head>
  <body>
    <slot />
    <script>
      // Simple JavaScript for mobile menu toggle
      document.addEventListener("DOMContentLoaded", () => {
        const mobileMenuButton = document.getElementById("mobile-menu-button");
        const mobileMenu = document.getElementById("mobile-menu");

        if (mobileMenuButton && mobileMenu) {
          mobileMenuButton.addEventListener("click", () => {
            mobileMenu.classList.toggle("hidden");
          });

          // Close menu when clicking on a link
          const mobileLinks = mobileMenu.querySelectorAll("a");
          mobileLinks.forEach((link) => {
            link.addEventListener("click", () => {
              mobileMenu.classList.add("hidden");
            });
          });
        }

        // FAQs toggle
        const faqItems = document.querySelectorAll(".faq-item");
        faqItems.forEach((item) => {
          const button = item.querySelector("button");
          const content = item.querySelector(".faq-content");

          if (button && content) {
            button.addEventListener("click", () => {
              const isOpen = !content.classList.contains("hidden");

              // Close all
              document.querySelectorAll(".faq-content").forEach((el) => {
                el.classList.add("hidden");
              });
              document.querySelectorAll(".faq-icon").forEach((el) => {
                el.classList.remove("rotate-180");
              });

              // Toggle clicked one
              if (!isOpen) {
                content.classList.remove("hidden");
                button.querySelector(".faq-icon")?.classList.add("rotate-180");
              }
            });
          }
        });
      });
    </script>
  </body>
</html>
