---
import "../styles/global.css";
import SEO from "../components/SEO.astro";
import Schema from "../components/Schema.astro";
import BreadcrumbSchema from "../components/BreadcrumbSchema.astro";
import PreloadAssets from "../components/PreloadAssets.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

interface Props {
  title: string;
  description?: string;
  image?: string;
  canonical?: string;
}

const {
  title,
  description = "Deploy in one command on your server. Use AI to unlock insights beyond dashboards. Grow from small bets to thriving businesses.",
  image = "https://getinfinitymetrics.com/InfinityMetrics%20128x720.png",
  canonical = Astro.url.href,
} = Astro.props;

// Get current page path for navigation highlighting
const currentPath = Astro.url.pathname;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="index, follow" />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- SEO -->
    <SEO
      title={title}
      description={description}
      image={image}
      canonical={canonical}
    />

    <!-- Preload Assets -->
    <PreloadAssets />

    <!-- Structured Data -->
    <Schema name={title} description={description} includeFAQ={false} />
    <BreadcrumbSchema pathname={currentPath} />

    <!-- Fonts -->
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap"
      rel="stylesheet"
    />

    <!-- Prism CSS for syntax highlighting -->
    <link
      href="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/themes/prism-tomorrow.css"
      rel="stylesheet"
    />

    <!-- Custom docs styles -->
    <style>
      /* Navigation styles */
      .docs-nav-item {
        @apply block px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-md transition-colors;
      }
      .docs-nav-item.active {
        @apply bg-blue-50 text-blue-700 border-r-2 border-blue-500;
      }
      .docs-nav-section {
        @apply mb-6;
      }
      .docs-nav-section h3 {
        @apply text-xs font-semibold text-gray-900 uppercase tracking-wide mb-2;
      }

      /* Custom alert boxes for markdown */
      .docs-content .note {
        @apply bg-blue-50 border border-blue-200 border-l-4 border-l-blue-500 rounded-lg p-4 my-6;
      }
      .docs-content .note h4 {
        @apply text-blue-900 font-semibold mb-2 mt-0;
      }
      .docs-content .note p {
        @apply text-blue-800 mb-0;
      }

      .docs-content .warning {
        @apply bg-yellow-50 border border-yellow-200 border-l-4 border-l-yellow-500 rounded-lg p-4 my-6;
      }
      .docs-content .warning h4 {
        @apply text-yellow-900 font-semibold mb-2 mt-0;
      }
      .docs-content .warning p {
        @apply text-yellow-800 mb-0;
      }

      .docs-content .danger {
        @apply bg-red-50 border border-red-200 border-l-4 border-l-red-500 rounded-lg p-4 my-6;
      }
      .docs-content .danger h4 {
        @apply text-red-900 font-semibold mb-2 mt-0;
      }
      .docs-content .danger p {
        @apply text-red-800 mb-0;
      }

      .docs-content .success {
        @apply bg-green-50 border border-green-200 border-l-4 border-l-green-500 rounded-lg p-4 my-6;
      }
      .docs-content .success h4 {
        @apply text-green-900 font-semibold mb-2 mt-0;
      }
      .docs-content .success p {
        @apply text-green-800 mb-0;
      }

      /* Command line styling */
      .docs-content .command {
        @apply bg-gray-900 text-green-400 p-4 rounded-lg my-6 font-mono text-sm overflow-x-auto;
      }
      .docs-content .command::before {
        @apply text-green-300 font-medium;
        content: "$ ";
      }

      /* Code copy functionality */
      .docs-content pre {
        @apply relative;
      }
      .docs-content pre::after {
        content: "Copy";
        @apply absolute top-3 right-3 bg-gray-600 text-white px-2 py-1 rounded text-xs opacity-0 transition-opacity cursor-pointer;
      }
      .docs-content pre:hover::after {
        @apply opacity-100;
      }

    </style>
  </head>
  <body class="bg-white antialiased">
    <Header />

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex gap-8 py-8">
        <!-- Main content -->
        <main class="flex-1 min-w-0">
          <article
            class="docs-content prose prose-lg prose-gray max-w-none prose-pre:bg-gray-900 prose-pre:text-gray-100 prose-code:bg-gray-100 prose-code:text-gray-900 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:font-mono prose-code:text-sm prose-a:text-blue-600 prose-a:no-underline hover:prose-a:underline prose-headings:scroll-mt-20"
          >
            <slot />
          </article>
        </main>

        <!-- Right sidebar navigation -->
        <aside class="w-64 flex-shrink-0 hidden lg:block">
          <nav class="sticky top-8 space-y-1">
            <div class="docs-nav-section">
              <h3>Getting Started</h3>
              <a
                href="/docs"
                class={`docs-nav-item ${currentPath === "/docs" ? "active" : ""}`}
              >
                Home
              </a>
              <a
                href="/docs/getting-started"
                class={`docs-nav-item ${currentPath === "/docs/getting-started" ? "active" : ""}`}
              >
                Getting Started
              </a>
              <a
                href="/docs/installation"
                class={`docs-nav-item ${currentPath === "/docs/installation" ? "active" : ""}`}
              >
                Installation
              </a>
            </div>

            <div class="docs-nav-section">
              <h3>Core Features</h3>
              <a
                href="/docs/automated-tracking"
                class={`docs-nav-item ${currentPath === "/docs/automated-tracking" ? "active" : ""}`}
              >
                Automated Tracking
              </a>
              <a
                href="/docs/custom-events"
                class={`docs-nav-item ${currentPath === "/docs/custom-events" ? "active" : ""}`}
              >
                Custom Events
              </a>
              <a
                href="/docs/revenue-tracking"
                class={`docs-nav-item ${currentPath === "/docs/revenue-tracking" ? "active" : ""}`}
              >
                Revenue Tracking
              </a>
              <a
                href="/docs/subdomain-tracking"
                class={`docs-nav-item ${currentPath === "/docs/subdomain-tracking" ? "active" : ""}`}
              >
                Subdomain Tracking
              </a>
              <a
                href="/docs/configuration"
                class={`docs-nav-item ${currentPath === "/docs/configuration" ? "active" : ""}`}
              >
                SDK Configuration
              </a>
            </div>

            <div class="docs-nav-section">
              <h3>Integration Guides</h3>
              <a
                href="/docs/integrations/generic"
                class={`docs-nav-item ${currentPath === "/docs/integrations/generic" ? "active" : ""}`}
              >
                Generic Integration
              </a>
            </div>

            <div class="docs-nav-section">
              <h3>Advanced</h3>
              <a
                href="/docs/administration"
                class={`docs-nav-item ${currentPath === "/docs/administration" ? "active" : ""}`}
              >
                Administration
              </a>
            </div>
          </nav>
        </aside>
      </div>
    </div>

    <Footer />

    <!-- Copy functionality for code blocks and header anchors -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Code block copy functionality
        const codeBlocks = document.querySelectorAll(".docs-content pre");
        codeBlocks.forEach((block) => {
          block.addEventListener("click", function (e) {
            // Only trigger on the copy button area
            const rect = block.getBoundingClientRect();
            const mouseEvent = e as MouseEvent;
            const isInCopyArea =
              mouseEvent.clientX > rect.right - 80 &&
              mouseEvent.clientX < rect.right - 10 &&
              mouseEvent.clientY > rect.top + 10 &&
              mouseEvent.clientY < rect.top + 40;

            if (!isInCopyArea) return;

            const code = block.querySelector("code");
            if (code) {
              navigator.clipboard.writeText(code.textContent || "").then(() => {
                // Create temporary style for "Copied!" feedback
                const style = document.createElement("style");
                style.textContent = `
                  .docs-content pre.copied::after {
                    content: "Copied!";
                    background-color: #059669;
                    color: #fff;
                  }
                `;
                document.head.appendChild(style);

                block.classList.add("copied");
                setTimeout(() => {
                  block.classList.remove("copied");
                  document.head.removeChild(style);
                }, 2000);
              });
            }
          });
        });

      });
    </script>
  </body>
</html>
