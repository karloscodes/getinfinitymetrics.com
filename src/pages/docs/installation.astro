---
import DocsLayout from "../../layouts/DocsLayout.astro";
---

<DocsLayout title="Installation - Infinity Metrics">
  <h1>Installation</h1>

  <p>
    Get Infinity Metrics running on your server in minutes. Choose from our
    automated installer, Docker deployment, or manual installation for full
    control.
  </p>

  <div class="note">
    <h4>üöÄ Quick Start</h4>
    <p>
      For most users, the <strong>automated installer</strong> is the fastest way
      to get started. It handles dependencies, configuration, and service setup automatically.
    </p>
  </div>

  <h2>Automated Installation</h2>

  <p>
    Our automated installer works on most Linux distributions and handles all
    setup automatically:
  </p>

  <div class="command">
    curl -sSL https://getinfinitymetrics.com/install | bash
  </div>

  <p>The installer will:</p>
  <ul>
    <li>‚úÖ Check system requirements</li>
    <li>‚úÖ Download the latest version</li>
    <li>‚úÖ Install dependencies</li>
    <li>‚úÖ Configure the database</li>
    <li>‚úÖ Set up the systemd service</li>
    <li>‚úÖ Start Infinity Metrics</li>
  </ul>

  <h3>Supported Systems</h3>
  <ul>
    <li>Ubuntu 18.04+ / Debian 10+</li>
    <li>CentOS 7+ / RHEL 7+</li>
    <li>Amazon Linux 2</li>
    <li>Arch Linux</li>
  </ul>

  <h2>Docker Installation</h2>

  <p>For containerized deployments, use our official Docker image:</p>

  <h3>Quick Start with Docker</h3>

  <pre><code class="language-bash">docker run -d \
  --name infinity-metrics \
  -p 8080:8080 \
  -v infinity-data:/var/lib/infinity-metrics \
  infinitymetrics/infinity-metrics:latest</code></pre>

  <h3>Docker Compose</h3>

  <p>For production deployments, use Docker Compose with persistent storage:</p>

  <pre><code class="language-yaml">version: '3.8'

services:
  infinity-metrics:
    image: infinitymetrics/infinity-metrics:latest
    container_name: infinity-metrics
    ports:
      - "8080:8080"
    volumes:
      - infinity-data:/var/lib/infinity-metrics
      - ./config.yml:/etc/infinity-metrics/config.yml
    environment:
      - INFINITY_CONFIG=/etc/infinity-metrics/config.yml
    restart: unless-stopped

volumes:
  infinity-data:</code></pre>

  <div class="command">docker-compose up -d</div>

  <h2>Manual Installation</h2>

  <p>For advanced users who want full control over the installation process:</p>

  <h3>Step 1: Download and Extract</h3>

  <pre><code class="language-bash"># Download the latest release
wget https://github.com/infinitymetrics/infinity-metrics/releases/latest/download/infinity-metrics-linux-amd64.tar.gz

# Extract to /opt/infinity-metrics
sudo tar -xzf infinity-metrics-linux-amd64.tar.gz -C /opt/
sudo chown -R infinity-metrics:infinity-metrics /opt/infinity-metrics</code></pre>

  <h3>Step 2: Create User and Directories</h3>

  <pre><code class="language-bash"># Create system user
sudo useradd --system --shell /bin/false infinity-metrics

# Create data directory
sudo mkdir -p /var/lib/infinity-metrics
sudo chown infinity-metrics:infinity-metrics /var/lib/infinity-metrics

# Create log directory
sudo mkdir -p /var/log/infinity-metrics
sudo chown infinity-metrics:infinity-metrics /var/log/infinity-metrics</code></pre>

  <h3>Step 3: Configuration</h3>

  <p>
    Create the configuration file at <code
      >/etc/infinity-metrics/config.yml</code
    >:
  </p>

  <pre><code class="language-yaml"># Database configuration
database:
  type: sqlite
  path: /var/lib/infinity-metrics/data.db
  # For PostgreSQL:
  # type: postgres
  # host: localhost
  # port: 5432
  # database: infinity_metrics
  # username: infinity_metrics
  # password: your_password

# Server configuration
server:
  host: 0.0.0.0
  port: 8080
  # For HTTPS:
  # tls:
  #   cert: /path/to/certificate.pem
  #   key: /path/to/private-key.pem

# Security
security:
  secret_key: "your-secret-key-here"
  cors_origins:
    - "https://yourdomain.com"
    - "https://www.yourdomain.com"

# Logging
logging:
  level: info
  file: /var/log/infinity-metrics/infinity-metrics.log
  max_size: 100MB
  max_backups: 5</code></pre>

  <h3>Step 4: Create Systemd Service</h3>

  <p>Create <code>/etc/systemd/system/infinity-metrics.service</code>:</p>

  <pre><code class="language-ini">[Unit]
Description=Infinity Metrics Analytics Server
After=network.target

[Service]
Type=simple
User=infinity-metrics
Group=infinity-metrics
ExecStart=/opt/infinity-metrics/infinity-metrics -config /etc/infinity-metrics/config.yml
Restart=always
RestartSec=5
StandardOutput=journal
StandardError=journal

# Security settings
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=strict
ReadWritePaths=/var/lib/infinity-metrics /var/log/infinity-metrics

[Install]
WantedBy=multi-user.target</code></pre>

  <h3>Step 5: Start the Service</h3>

  <pre><code class="language-bash"># Reload systemd and start the service
sudo systemctl daemon-reload
sudo systemctl enable infinity-metrics
sudo systemctl start infinity-metrics

# Check status
sudo systemctl status infinity-metrics</code></pre>

  <h2>Reverse Proxy Setup</h2>

  <p>For production deployments, use a reverse proxy like Nginx:</p>

  <h3>Nginx Configuration</h3>

  <pre><code class="language-nginx">server &#123;
     listen 80;
     server_name analytics.yourdomain.com;
     
     # Redirect HTTP to HTTPS
     return 301 https://&#36;server_name&#36;request_uri;
 &#125;
 
 server &#123;
     listen 443 ssl http2;
     server_name analytics.yourdomain.com;
     
     ssl_certificate /path/to/certificate.pem;
     ssl_certificate_key /path/to/private-key.pem;
     
     # Security headers
     add_header X-Frame-Options DENY;
     add_header X-Content-Type-Options nosniff;
     add_header X-XSS-Protection "1; mode=block";
     
     location / &#123;
         proxy_pass http://localhost:8080;
         proxy_set_header Host &#36;host;
         proxy_set_header X-Real-IP &#36;remote_addr;
         proxy_set_header X-Forwarded-For &#36;proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto &#36;scheme;
         
         # WebSocket support
         proxy_http_version 1.1;
         proxy_set_header Upgrade &#36;http_upgrade;
         proxy_set_header Connection "upgrade";
     &#125;
 &#125;</code></pre>

  <h2>Verification</h2>

  <p>Once installed, verify that Infinity Metrics is running:</p>

  <pre><code class="language-bash"># Check if the service is running
curl http://localhost:8080/health

# Expected response:
# &#123;"status":"ok","version":"1.0.0","uptime":"5m30s"&#125;</code></pre>

  <h2>Environment Variables</h2>

  <p>You can also configure Infinity Metrics using environment variables:</p>

  <pre><code class="language-bash">export INFINITY_DATABASE_PATH="/var/lib/infinity-metrics/data.db"
export INFINITY_SERVER_HOST="0.0.0.0"
export INFINITY_SERVER_PORT="8080"
export INFINITY_SECRET_KEY="your-secret-key"
export INFINITY_LOG_LEVEL="info"</code></pre>

  <h2>Troubleshooting</h2>

  <div class="warning">
    <h4>‚ö†Ô∏è Common Issues</h4>
    <ul>
      <li>
        <strong>Port already in use:</strong> Change the port in configuration or
        stop the conflicting service
      </li>
      <li>
        <strong>Permission denied:</strong> Ensure the infinity-metrics user has
        proper permissions
      </li>
      <li>
        <strong>Database connection:</strong> Check database credentials and connectivity
      </li>
    </ul>
  </div>

  <h3>Check Logs</h3>

  <pre><code class="language-bash"># View service logs
sudo journalctl -u infinity-metrics -f

# View application logs
sudo tail -f /var/log/infinity-metrics/infinity-metrics.log</code></pre>

  <h3>Test Configuration</h3>

  <pre><code class="language-bash"># Test configuration file
/opt/infinity-metrics/infinity-metrics -config /etc/infinity-metrics/config.yml -test</code></pre>

  <div class="success">
    <h4>‚úÖ Installation Complete!</h4>
    <p>
      Infinity Metrics is now running. Continue with the <a
        href="/docs/getting-started">Getting Started guide</a
      > to configure your first site.
    </p>
  </div>

  <h2>Next Steps</h2>

  <ul>
    <li><a href="/docs/getting-started">Complete the setup process</a></li>
    <li><a href="/docs/custom-events">Learn about custom events</a></li>
    <li><a href="/docs/frameworks">Integrate with your framework</a></li>
    <li><a href="/docs/administration">Configure user accounts</a></li>
  </ul>
</DocsLayout>
