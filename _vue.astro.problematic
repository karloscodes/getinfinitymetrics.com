---
import Layout from '../../../layouts/Layout.astro';
---

<Layout title="Vue Integration - Infinity Metrics">
  <div class="min-h-screen bg-gray-50 py-12">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Header -->
      <div class="mb-8">
        <nav class="flex items-center space-x-2 text-sm text-gray-500 mb-4">
          <a href="/docs" class="hover:text-blue-600">Documentation</a>
          <span>→</span>
          <a href="/docs/frameworks" class="hover:text-blue-600">Frameworks</a>
          <span>→</span>
          <span class="text-gray-900">Vue</span>
        </nav>
        <h1 class="text-3xl font-bold text-gray-900">Vue Integration</h1>
        <p class="mt-2 text-gray-600">Complete guide to integrating Infinity Metrics with Vue.js applications</p>
      </div>

      <!-- Quick Setup -->
      <section class="mb-12 bg-white rounded-lg shadow-sm p-6">
        <h2 class="text-2xl font-semibold text-gray-900 mb-4">Quick Setup</h2>
        
        <div class="space-y-6">
          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">1. Install the Package</h3>
            <div class="bg-gray-900 rounded-lg p-4 text-gray-100 font-mono text-sm">
              <code>npm install @infinity-metrics/vue</code>
            </div>
          </div>

          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">2. Setup Plugin (Vue 3)</h3>
            <div class="bg-gray-900 rounded-lg p-4 text-gray-100 font-mono text-sm overflow-x-auto">
              <pre><code>import &#123; createApp &#125; from 'vue'
import &#123; InfinityMetrics &#125; from '@infinity-metrics/vue'
import App from './App.vue'

const app = createApp(App)

app.use(InfinityMetrics, &#123;
  apiKey: 'your-api-key',
  domain: 'yourdomain.com',
  trackPageViews: true
&#125;)

app.mount('#app')</code></pre>
            </div>
          </div>

          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">3. Setup Plugin (Vue 2)</h3>
            <div class="bg-gray-900 rounded-lg p-4 text-gray-100 font-mono text-sm overflow-x-auto">
              <pre><code>import Vue from 'vue'
import &#123; InfinityMetrics &#125; from '@infinity-metrics/vue'
import App from './App.vue'

Vue.use(InfinityMetrics, &#123;
  apiKey: 'your-api-key',
  domain: 'yourdomain.com'
&#125;)

new Vue(&#123;
  render: h => h(App),
&#125;).$mount('#app')</code></pre>
            </div>
          </div>
        </div>
      </section>

      <!-- Composition API -->
      <section class="mb-12 bg-white rounded-lg shadow-sm p-6">
        <h2 class="text-2xl font-semibold text-gray-900 mb-4">Composition API (Vue 3)</h2>
        
        <div class="space-y-6">
          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Using the Composable</h3>
            <div class="bg-gray-900 rounded-lg p-4 text-gray-100 font-mono text-sm overflow-x-auto">
              <pre><code>{`<template>
  <div>
    <button @click="handleClick">Track Event</button>
    <button @click="handlePurchase">Track Purchase</button>
  </div>
</template>

<script setup>
import { useInfinityMetrics } from '@infinity-metrics/vue'

const { track } = useInfinityMetrics()

const handleClick = () => {
  track('button_click', {
    button_name: 'cta_button',
    page: 'homepage'
  })
}

const handlePurchase = () => {
  track('purchase', {
    transaction_id: 'txn_123',
    value: 49.99,
    currency: 'USD',
    items: [{
      item_id: 'prod_123',
      item_name: 'Premium Plan',
      category: 'subscription',
      price: 49.99
    }]
  })
}
</script>`}</code></pre>
            </div>
          </div>

          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Page View Tracking</h3>
            <div class="bg-gray-900 rounded-lg p-4 text-gray-100 font-mono text-sm overflow-x-auto">
              <pre><code>{`<script setup>
import { onMounted } from 'vue'
import { useInfinityMetrics } from '@infinity-metrics/vue'
import { useRoute } from 'vue-router'

const route = useRoute()
const { track } = useInfinityMetrics()

onMounted(() => {
  track('page_view', {
    path: route.path,
    page_title: document.title,
    referrer: document.referrer
  })
})
</script>`}</code></pre>
            </div>
          </div>
        </div>
      </section>

      <!-- Options API -->
      <section class="mb-12 bg-white rounded-lg shadow-sm p-6">
        <h2 class="text-2xl font-semibold text-gray-900 mb-4">Options API (Vue 2 & 3)</h2>
        
        <div class="space-y-6">
          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Component Usage</h3>
            <div class="bg-gray-900 rounded-lg p-4 text-gray-100 font-mono text-sm overflow-x-auto">
              <pre><code>{`<template>
  <div>
    <product-card 
      v-for="product in products"
      :key="product.id"
      :product="product"
      @view="trackProductView"
      @add-to-cart="trackAddToCart"
    />
  </div>
</template>

<script>
export default {
  data() {
    return {
      products: []
    }
  },
  mounted() {
    this.$track('page_view', {
      page: 'products',
      category: this.$route.params.category
    })
  },
  methods: {
    trackProductView(product) {
      this.$track('view_item', {
        item_id: product.id,
        item_name: product.name,
        category: product.category,
        value: product.price
      })
    },
    trackAddToCart(product) {
      this.$track('add_to_cart', {
        currency: 'USD',
        value: product.price,
        items: [{
          item_id: product.id,
          item_name: product.name,
          category: product.category,
          quantity: 1,
          price: product.price
        }]
      })
    }
  }
}
</script>`}</code></pre>
            </div>
          </div>
        </div>
      </section>

      <!-- Vue Router Integration -->
      <section class="mb-12 bg-white rounded-lg shadow-sm p-6">
        <h2 class="text-2xl font-semibold text-gray-900 mb-4">Vue Router Integration</h2>
        
        <div class="space-y-6">
          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Automatic Route Tracking</h3>
            <div class="bg-gray-900 rounded-lg p-4 text-gray-100 font-mono text-sm overflow-x-auto">
              <pre><code>{`import { createRouter, createWebHistory } from 'vue-router'
import { trackPageView } from '@infinity-metrics/vue'

const router = createRouter({
  history: createWebHistory(),
  routes: [
    // your routes
  ]
})

router.afterEach((to, from) => {
  // Track page view on route change
  trackPageView({
    path: to.path,
    name: to.name,
    params: to.params,
    query: to.query,
    previous_path: from.path
  })
})

export default router`}</code></pre>
            </div>
          </div>

          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Route Meta Tracking</h3>
            <div class="bg-gray-900 rounded-lg p-4 text-gray-100 font-mono text-sm overflow-x-auto">
              <pre><code>{`const routes = [
  {
    path: '/products/:id',
    component: ProductView,
    meta: {
      analytics: {
        page_type: 'product',
        track_conversion: true
      }
    }
  },
  {
    path: '/checkout',
    component: CheckoutView,
    meta: {
      analytics: {
        page_type: 'checkout',
        funnel_step: 'payment'
      }
    }
  }
]

router.afterEach((to) => {
  if (to.meta.analytics) {
    trackPageView({
      path: to.path,
      ...to.meta.analytics
    })
  }
})`}</code></pre>
            </div>
          </div>
        </div>
      </section>

      <!-- Vuex Integration -->
      <section class="mb-12 bg-white rounded-lg shadow-sm p-6">
        <h2 class="text-2xl font-semibold text-gray-900 mb-4">State Management Integration</h2>
        
        <div class="space-y-6">
          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Vuex Plugin</h3>
            <div class="bg-gray-900 rounded-lg p-4 text-gray-100 font-mono text-sm overflow-x-auto">
              <pre><code>{`import { createStore } from 'vuex'
import { createAnalyticsPlugin } from '@infinity-metrics/vue'

const analyticsPlugin = createAnalyticsPlugin({
  // Track specific mutations
  trackMutations: [
    'ADD_TO_CART',
    'REMOVE_FROM_CART',
    'COMPLETE_PURCHASE'
  ],
  // Transform mutation to event
  mutationToEvent: (mutation) => {
    switch (mutation.type) {
      case 'ADD_TO_CART':
        return {
          event: 'add_to_cart',
          properties: {
            item_id: mutation.payload.id,
            value: mutation.payload.price
          }
        }
      case 'COMPLETE_PURCHASE':
        return {
          event: 'purchase',
          properties: {
            transaction_id: mutation.payload.id,
            value: mutation.payload.total
          }
        }
    }
  }
})

const store = createStore({
  plugins: [analyticsPlugin]
})`}</code></pre>
            </div>
          </div>

          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Pinia Integration</h3>
            <div class="bg-gray-900 rounded-lg p-4 text-gray-100 font-mono text-sm overflow-x-auto">
              <pre><code>{`import { defineStore } from 'pinia'
import { useInfinityMetrics } from '@infinity-metrics/vue'

export const useCartStore = defineStore('cart', () => {
  const { track } = useInfinityMetrics()
  const items = ref([])
  
  const addItem = (item) => {
    items.value.push(item)
    
    // Track add to cart event
    track('add_to_cart', {
      item_id: item.id,
      item_name: item.name,
      value: item.price,
      cart_total: getCartTotal()
    })
  }
  
  const removeItem = (itemId) => {
    const item = items.value.find(i => i.id === itemId)
    items.value = items.value.filter(i => i.id !== itemId)
    
    // Track remove from cart event
    track('remove_from_cart', {
      item_id: itemId,
      item_name: item?.name,
      cart_total: getCartTotal()
    })
  }
  
  return { items, addItem, removeItem }
})`}</code></pre>
            </div>
          </div>
        </div>
      </section>

      <!-- Navigation -->
      <div class="flex justify-between items-center pt-8 border-t border-gray-200">
        <a href="/docs/frameworks/react" class="flex items-center text-blue-600 hover:text-blue-800">
          ← React Integration
        </a>
        <a href="/docs/frameworks/angular" class="flex items-center text-blue-600 hover:text-blue-800">
          Angular Integration →
        </a>
      </div>
    </div>
  </div>
</Layout>
