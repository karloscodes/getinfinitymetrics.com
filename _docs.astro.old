---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import BreadcrumbNavigation from "../components/BreadcrumbNavigation.astro";
import { generateBreadcrumbs } from "../utils/breadcrumbs";

const pageTitle = "InfinityMetrics | Documentation";
const pageDescription =
  "Complete documentation for Infinity Metrics. One command install, Docker & SQLite setup. Self-hosted analytics with AI insights for solopreneurs and small teams.";

// Generate breadcrumbs for docs page
const breadcrumbs = generateBreadcrumbs(Astro.url.pathname);

// Code fragments for display in the documentation
// Installation section
const installCommand =
  "curl -fsSL https://getinfinitymetrics.com/install -o install.sh && sudo bash install.sh";
const trackingScript = `<script defer src="https://your-domain.com/api/v1/sdk.js"></script>`;

// SDK Usage: Including the SDK
const sdkIncludeScript = `<script defer src="https://your-domain.com/api/v1/sdk.js"></script>`;

// SDK Usage: SDK Configuration
const sdkConfigCode = `// Modify configuration before the SDK loads
window.InfinityMetrics = window.InfinityMetrics || {};
window.InfinityMetrics.config = {
	respectDoNotTrack: true,            // Honor browser's Do Not Track setting
	autoInstrumentButtons: true,        // Auto-track button clicks
	autoSendPageViews: true,            // Automatically send page views
	debug: false                        // Enable debug logging
};`;

// SDK Usage: Manual Tracking
const customEventSimple = `// Track a simple event
window.InfinityMetrics.sendCustomEvent('button_click')`;
const customEventWithProps = `// Track an event with properties
window.InfinityMetrics.sendCustomEvent('signup', { method: 'email' })`;
const manualPageView = "window.InfinityMetrics.sendPageView()";
const identifyUser = `window.InfinityMetrics.setUser({ userId: 'user_123' })`;

// Purchase tracking examples
const registerPurchaseSimple = `// Track a $19.99 purchase
window.InfinityMetrics.registerPurchase(1999, 'USD')`;
const registerPurchaseWithMetadata = `// Track a purchase with additional metadata
window.InfinityMetrics.registerPurchase(1999, 'USD', {
  productId: 'prod_123',
  productName: 'Premium Plan',
  quantity: 1,
  category: 'subscription'
})`;

const dataDrivenLinkExample = `
<a href="/features"
   data-infinity-event-name="Clicked Features Link From Docs"
   data-infinity-metadata-location="Docs Page Section"
   data-infinity-metadata-custom_id="feat_123">
   Explore Our Features
</a>`;

// Self-Managed Installation: Docker run command
const dockerRunCommand = `docker run -d \\
  --name infinity-metrics \\
  -v /path/to/storage:/app/storage \\
  -v /path/to/logs:/app/logs \\
  -e INFINITY_METRICS_LOG_LEVEL=debug \\
  -e INFINITY_METRICS_APP_PORT=8080 \\
  -e INFINITY_METRICS_LICENSE_KEY=your-license-key \\
  -e INFINITY_METRICS_DOMAIN=your-domain.com \\
  -e INFINITY_METRICS_PRIVATE_KEY=your-private-key \\
  --restart unless-stopped \\
  infinitymetrics/app:latest`;

// Administrative Operations: Commands
const changeAdminPasswordCommand =
  "sudo infinity-metrics change-admin-password";
const forceUpdateCommand = "sudo infinity-metrics update";

// Framework Installation Guides code snippets
const frameworkGuides = {
	nextjs: `// pages/_app.js or app/layout.js (App Router)
import { useEffect } from 'react';

function MyApp({ Component, pageProps }) {
  useEffect(() => {
    const script = document.createElement('script');
    script.defer = true;
    script.src = 'https://your-domain.com/api/v1/sdk.js';
    document.head.appendChild(script);
    
    return () => {
      document.head.removeChild(script);
    };
  }, []);

  return <Component {...pageProps} />;
}

export default MyApp;`,

	react: `// App.js or main component
import { useEffect } from 'react';

function App() {
  useEffect(() => {
    const script = document.createElement('script');
    script.defer = true;
    script.src = 'https://your-domain.com/api/v1/sdk.js';
    document.head.appendChild(script);
    
    return () => {
      document.head.removeChild(script);
    };
  }, []);

  return (
    <div className="App">
      {/* Your app content */}
    </div>
  );
}

export default App;`,

	vue: `<!-- App.vue -->
<template>
  <div id="app">
    <!-- Your app content -->
  </div>
</template>

<script>
export default {
  name: 'App',
  mounted() {
    const script = document.createElement('script');
    script.defer = true;
    script.src = 'https://your-domain.com/api/v1/sdk.js';
    document.head.appendChild(script);
  }
}
</script>`,

	angular: `// app.component.ts
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  
  ngOnInit() {
    const script = document.createElement('script');
    script.defer = true;
    script.src = 'https://your-domain.com/api/v1/sdk.js';
    document.head.appendChild(script);
  }
}`,

	django: `<!-- templates/base.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Your Site{% endblock %}</title>
    
    <!-- Infinity Metrics -->
    <script defer src="https://your-domain.com/api/v1/sdk.js"></script>
</head>
<body>
    {% block content %}
    {% endblock %}
</body>
</html>`,

	laravel: `<!-- resources/views/layouts/app.blade.php -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@yield('title', 'Your Site')</title>
    
    <!-- Infinity Metrics -->
    <script defer src="https://your-domain.com/api/v1/sdk.js"></script>
</head>
<body>
    @yield('content')
</body>
</html>`,

	wordpress: `// functions.php
function add_infinity_metrics_script() {
    ?>
    <script defer src="https://your-domain.com/api/v1/sdk.js"></script>
    <?php
}
add_action('wp_head', 'add_infinity_metrics_script');`,

	gatsby: `// gatsby-config.js
module.exports = {
  plugins: [
    {
      resolve: 'gatsby-plugin-html-attributes',
      options: {
        'data-infinity-domain': 'your-domain.com'
      }
    }
  ]
}

// gatsby-browser.js
export const onClientEntry = () => {
  const script = document.createElement('script');
  script.defer = true;
  script.src = 'https://your-domain.com/api/v1/sdk.js';
  document.head.appendChild(script);
};`,

	nuxt: `// nuxt.config.js
export default {
  head: {
    script: [
      {
        defer: true,
        src: 'https://your-domain.com/api/v1/sdk.js'
      }
    ]
  }
}`,

	svelte: `<!-- App.svelte -->
<script>
  import { onMount } from 'svelte';
  
  onMount(() => {
    const script = document.createElement('script');
    script.defer = true;
    script.src = 'https://your-domain.com/api/v1/sdk.js';
    document.head.appendChild(script);
  });
</script>

<main>
  <!-- Your app content -->
</main>`
};

// Subdomain tracking configuration
const subdomainConfig = `// Configure subdomain tracking
window.InfinityMetrics = window.InfinityMetrics || {};
window.InfinityMetrics.config = {
	trackSubdomains: true,               // Enable subdomain tracking
	domain: '.yourdomain.com',           // Root domain with leading dot
	autoSendPageViews: true,
	respectDoNotTrack: true
};`;

// Revenue tracking examples
const revenueTrackingExamples = {
	basic: `// Basic purchase tracking
window.InfinityMetrics.sendCustomEvent('purchase', {
	revenue: 29.99,
	currency: 'USD',
	product: 'Pro Plan'
});`,

	detailed: `// Detailed purchase with metadata
window.InfinityMetrics.sendCustomEvent('purchase', {
	revenue: 99.99,
	currency: 'USD',
	product: 'Enterprise Plan',
	quantity: 1,
	paymentMethod: 'stripe',
	subscriptionType: 'annual',
	customerId: 'cust_123',
	orderId: 'order_456'
});`,

	subscription: `// Subscription events
window.InfinityMetrics.sendCustomEvent('subscription_started', {
	revenue: 19.99,
	currency: 'USD',
	plan: 'monthly_pro',
	trial: false
});

window.InfinityMetrics.sendCustomEvent('subscription_cancelled', {
	plan: 'monthly_pro',
	reason: 'too_expensive'
});`,

	leadValue: `// Lead value tracking
window.InfinityMetrics.sendCustomEvent('lead_generated', {
	leadValue: 50.00,
	currency: 'USD',
	source: 'contact_form',
	leadType: 'sales_inquiry'
});`
};

---

<Layout
  title={pageTitle}
  description={pageDescription}
  breadcrumbs={breadcrumbs}
>
  <Header />
  <main class="py-12 md:py-20 overflow-hidden">
    <div class="container px-4 sm:px-6 overflow-hidden">
      <div class="max-w-4xl mx-auto">
        <BreadcrumbNavigation breadcrumbs={breadcrumbs} />
        <h1
          class="text-4xl md:text-5xl font-bold mb-8 bg-clip-text text-transparent bg-gradient-to-r from-black to-gray-700"
        >
          Documentation
        </h1>

<<<<<<< HEAD:src/pages/docs.astro
        <!-- Table of Contents -->
        <div
          class="mb-12 p-4 sm:p-6 rounded-xl border border-gray-200 overflow-x-hidden"
        >
          <h2 class="text-xl font-semibold mb-4 text-black">Contents</h2>
          <ul class="space-y-2">
            <li>
              <a
                href="#automated-installation"
                class="text-blue-600 hover:underline break-words"
                >Automated Installation</a
              >
              <ul class="ml-2 sm:ml-6 mt-2 space-y-2">
                <li>
                  <a
                    href="#get-license-automated"
                    class="text-blue-600 hover:underline break-words"
                    >Get Your License</a
                  >
                </li>
                <li>
                  <a
                    href="#installer-and-updater"
                    class="text-blue-600 hover:underline"
                    >InfinityMetrics Installer and Updater</a
                  >
                </li>
              </ul>
            </li>
            <li>
              <a
                href="#self-managed-installation"
                class="text-blue-600 hover:underline"
                >Self-Managed Installation</a
              >
              <ul class="ml-2 sm:ml-6 mt-2 space-y-2">
                <li>
                  <a
                    href="#get-license-self-managed"
                    class="text-blue-600 hover:underline break-words"
                    >Get Your License</a
                  >
                </li>
                <li>
                  <a
                    href="#docker-installation"
                    class="text-blue-600 hover:underline break-words"
                    >Docker Installation</a
                  >
                </li>
              </ul>
            </li>
            <li>
              <a
                href="#integrating-tracking-script"
                class="text-blue-600 hover:underline"
                >Integrating the Tracking Script</a
              >
            </li>
            <li>
              <a
                href="#accessing-dashboard"
                class="text-blue-600 hover:underline break-words"
                >Accessing the Dashboard</a
              >
            </li>
            <li>
              <a
                href="#administrative-operations"
                class="text-blue-600 hover:underline"
                >Administrative Operations</a
              >
            </li>
            <li>
              <a
                href="#server-requirements"
                class="text-blue-600 hover:underline break-words"
                >Server Requirements</a
              >
            </li>
            <li>
              <a href="#sdk-usage" class="text-blue-600 hover:underline"
                >SDK Usage</a
              >
              <ul class="ml-2 sm:ml-6 mt-2 space-y-2">
                <li>
                  <a href="#sdk-include" class="text-blue-600 hover:underline"
                    >Including the SDK</a
                  >
                </li>
                <li>
                  <a
                    href="#sdk-configuration"
                    class="text-blue-600 hover:underline break-words"
                    >SDK Configuration</a
                  >
                </li>
                <li>
                  <a href="#auto-tracking" class="text-blue-600 hover:underline"
                    >Automated Tracking</a
                  >
                </li>
                <li>
                  <a
                    href="#manual-tracking"
                    class="text-blue-600 hover:underline break-words"
                    >Manual Tracking</a
                  >
                </li>
                <li>
                  <a
                    href="#purchase-tracking"
                    class="text-blue-600 hover:underline break-words"
                    >Purchase Tracking</a
                  >
                </li>
              </ul>
            </li>
          </ul>
        </div>
=======
				<!-- Table of Contents -->
				<div class="mb-12 p-4 sm:p-6 rounded-xl border border-gray-200 overflow-x-hidden">
					<h2 class="text-xl font-semibold mb-4 text-black">Contents</h2>
					<ul class="space-y-2">
						<li>
							<a
								href="#automated-installation"
								class="text-blue-600 hover:underline break-words">Automated Installation</a
							>
							<ul class="ml-2 sm:ml-6 mt-2 space-y-2">
								<li>
									<a
										href="#get-license-automated"
										class="text-blue-600 hover:underline break-words">Get Your License</a
									>
								</li>
								<li>
									<a
										href="#installer-and-updater"
										class="text-blue-600 hover:underline"
										>InfinityMetrics Installer and Updater</a
									>
								</li>
							</ul>
						</li>
						<li>
							<a
								href="#self-managed-installation"
								class="text-blue-600 hover:underline"
								>Self-Managed Installation</a
							>
							<ul class="ml-2 sm:ml-6 mt-2 space-y-2">
								<li>
									<a
										href="#get-license-self-managed"
										class="text-blue-600 hover:underline break-words">Get Your License</a
									>
								</li>
								<li>
									<a
										href="#docker-installation"
										class="text-blue-600 hover:underline break-words">Docker Installation</a
									>
								</li>
							</ul>
						</li>
						<li>
							<a
								href="#integrating-tracking-script"
								class="text-blue-600 hover:underline"
								>Integrating the Tracking Script</a
							>
						</li>
						<li>
							<a
								href="#accessing-dashboard"
								class="text-blue-600 hover:underline break-words">Accessing the Dashboard</a
							>
						</li>
						<li>
							<a
								href="#administrative-operations"
								class="text-blue-600 hover:underline"
								>Administrative Operations</a
							>
						</li>
						<li>
							<a
								href="#server-requirements"
								class="text-blue-600 hover:underline break-words">Server Requirements</a
							>
						</li>
						<li>
							<a href="#sdk-usage" class="text-blue-600 hover:underline"
								>SDK Usage</a
							>
							<ul class="ml-2 sm:ml-6 mt-2 space-y-2">
								<li>
									<a href="#sdk-include" class="text-blue-600 hover:underline"
										>Including the SDK</a
									>
								</li>
								<li>
									<a
										href="#sdk-configuration"
										class="text-blue-600 hover:underline break-words">SDK Configuration</a
									>
								</li>
								<li>
									<a href="#auto-tracking" class="text-blue-600 hover:underline"
										>Automated Tracking</a
									>
								</li>
								<li>
									<a
										href="#manual-tracking"
										class="text-blue-600 hover:underline break-words">Manual Tracking</a
									>
								</li>
							</ul>
						</li>
						<li>
							<a href="#framework-guides" class="text-blue-600 hover:underline"
								>Framework Installation Guides</a
							>
							<ul class="ml-2 sm:ml-6 mt-2 space-y-2">
								<li>
									<a href="#nextjs-guide" class="text-blue-600 hover:underline"
										>Next.js</a
									>
								</li>
								<li>
									<a href="#react-guide" class="text-blue-600 hover:underline"
										>React</a
									>
								</li>
								<li>
									<a href="#vue-guide" class="text-blue-600 hover:underline"
										>Vue.js</a
									>
								</li>
								<li>
									<a href="#angular-guide" class="text-blue-600 hover:underline"
										>Angular</a
									>
								</li>
								<li>
									<a href="#django-guide" class="text-blue-600 hover:underline"
										>Django</a
									>
								</li>
								<li>
									<a href="#laravel-guide" class="text-blue-600 hover:underline"
										>Laravel</a
									>
								</li>
								<li>
									<a href="#wordpress-guide" class="text-blue-600 hover:underline"
										>WordPress</a
									>
								</li>
								<li>
									<a href="#other-frameworks" class="text-blue-600 hover:underline"
										>Other Frameworks</a
									>
								</li>
							</ul>
						</li>
						<li>
							<a href="#advanced-features" class="text-blue-600 hover:underline"
								>Advanced Features</a
							>
							<ul class="ml-2 sm:ml-6 mt-2 space-y-2">
								<li>
									<a href="#subdomain-tracking" class="text-blue-600 hover:underline"
										>Subdomain Tracking</a
									>
								</li>
								<li>
									<a href="#revenue-tracking" class="text-blue-600 hover:underline"
										>Revenue Tracking</a
									>
								</li>
								<li>
									<a href="#custom-events" class="text-blue-600 hover:underline"
										>Custom Events</a
									>
								</li>
							</ul>
						</li>
					</ul>
				</div>
>>>>>>> 96fe8b6 (WIP):_docs.astro.old

        <!-- Automated Installation Section -->
        <section id="automated-installation" class="mb-12">
          <div class="flex items-start mb-6">
            <h2 class="text-3xl font-bold text-black">
              Automated Installation
            </h2>
          </div>
          <div class="border-l-4 border-gray-300 pl-4 sm:pl-6 py-2">
            <p class="text-black mb-3">
              This method provides a streamlined installation process with
              automatic updates, ideal for Ubuntu Server users.
            </p>

            <section id="get-license-automated" class="mb-10">
              <h3 class="text-xl font-semibold mb-3 text-black">
                1. Get your license
              </h3>
              <p class="text-black">
                Purchase your Infinity Metrics license from our <a
                  href="/#pricing"
                  class="text-blue-600 hover:underline break-words"
                  >pricing section</a
                > to get started.
              </p>
            </section>

            <section id="installer-and-updater" class="mb-10">
              <h3 class="text-xl font-semibold mb-5 text-black">
                2. InfinityMetrics Installer and Updater
              </h3>
              <p class="text-black mb-3">
                The installer automatically configures SSL certificates and uses
                Caddy as a proxy. For more details, see the <a
                  href="https://github.com/karloscodes/infinity-metrics-installer"
                  class="text-blue-600 hover:underline"
                  >Infinity Metrics Installer on GitHub</a
                >.
              </p>
              <div class="space-y-4">
                <h4 class="text-lg font-semibold mb-3 text-black">
                  Install with a single command
                </h4>
                <p class="text-black mb-3">
                  Run the installer and follow its instructions.
                </p>
                <div
                  class="bg-black p-3 rounded-md font-mono text-sm overflow-x-auto leading-relaxed md:leading-relaxed sm:leading-relaxed sm:overflow-x-auto sm:whitespace-normal sm:text-xs"
                >
                  <pre
                    class="whitespace-pre-wrap break-all"><code class="text-white">{installCommand}</code></pre>
                </div>
              </div>
            </section>
          </div>
        </section>

        <!-- Self-Managed Installation Section -->
        <section id="self-managed-installation" class="mb-12">
          <div class="flex items-start mb-6">
            <h2 class="text-3xl font-bold text-black">
              Self-Managed Installation
            </h2>
          </div>
          <div class="border-l-4 border-gray-300 pl-4 sm:pl-6 py-2">
            <p class="text-black mb-3">
              This method is for users who prefer manual setup or are using a
              non-Ubuntu Linux distribution, deploying Infinity Metrics via a
              Docker image.
            </p>

            <section id="get-license-self-managed" class="mb-10">
              <h3 class="text-xl font-semibold mb-3 text-black">
                1. Get your license
              </h3>
              <p class="text-black">
                Purchase your Infinity Metrics license from our <a
                  href="/#pricing"
                  class="text-blue-600 hover:underline break-words"
                  >pricing section</a
                > to get started.
              </p>
            </section>

            <section id="docker-installation" class="mb-10">
              <h3 class="text-xl font-semibold mb-5 text-black">
                2. Docker Installation
              </h3>
              <div class="space-y-4">
                <ul class="space-y-3 text-black">
                  <li>
                    Infinity Metrics consists of a single Docker image that
                    automatically manages its internal database, making it
                    compatible with any Linux distribution.
                  </li>
                  <li>
                    It is actively tested on Ubuntu Server (20.04 LTS or newer),
                    but theoretically, it can be used on any Linux distribution.
                  </li>
                  <li class="font-semibold">
                    <strong>Note:</strong> We recommend putting Infinity Metrics
                    behind a proxy for enhanced security and performance. With this
                    method, all updates are in your hands.
                  </li>
                </ul>
                <h4 class="text-lg font-semibold mb-3 text-black">
                  Required Environment Variables
                </h4>
                <p class="text-black mb-3">
                  The following environment variables are required to run the
                  Infinity Metrics Docker image:
                </p>
                <ul class="space-y-3 text-black">
                  <li>
                    <strong>INFINITY_METRICS_LOG_LEVEL:</strong> Logging level (e.g.,
                    <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >debug</code
                    >)
                  </li>
                  <li>
                    <strong>INFINITY_METRICS_APP_PORT:</strong> Port for the app
                    (e.g., <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >8080</code
                    >)
                  </li>
                  <li>
                    <strong>INFINITY_METRICS_LICENSE_KEY:</strong> Your license key
                    obtained in step 1
                  </li>
                  <li>
                    <strong>INFINITY_METRICS_DOMAIN:</strong> Your domain (e.g.,
                    <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >your-domain.com</code
                    >)
                  </li>
                  <li>
                    <strong>INFINITY_METRICS_PRIVATE_KEY:</strong> Private key for
                    internal functioning of the app. (32 random characters)
                  </li>
                </ul>
                <h4 class="text-lg font-semibold mb-3 text-black">
                  Docker Run Command
                </h4>
                <p class="text-black mb-3">
                  Use the following command to run the Infinity Metrics Docker
                  image. Replace the placeholder values with your own:
                </p>
                <div
                  class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed md:leading-relaxed sm:leading-relaxed sm:overflow-x-auto sm:whitespace-normal sm:text-xs"
                >
                  <pre
                    class="whitespace-pre-wrap break-all"><code class="text-white">{dockerRunCommand}</code></pre>
                </div>
              </div>
            </section>
          </div>
        </section>

        <!-- Integrating the Tracking Script Section -->
        <section id="integrating-tracking-script" class="mb-12">
          <div class="flex items-start mb-6">
            <h2 class="text-3xl font-bold text-black">
              Integrating the Tracking Script
            </h2>
          </div>
          <p class="text-black mb-3">
            Copy the lightweight tracking script below to your website(s) to
            start collecting data. This step applies to both installation
            methods.
          </p>
          <div
            class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed md:leading-relaxed sm:leading-relaxed sm:overflow-x-auto sm:whitespace-normal sm:text-xs"
          >
            <pre
              class="whitespace-pre-wrap break-all"><code class="text-white">{trackingScript}</code></pre>
          </div>
        </section>

        <!-- Accessing the Dashboard Section -->
        <section id="accessing-dashboard" class="mb-12">
          <div class="flex items-start mb-6">
            <h2 class="text-3xl font-bold text-black">
              Accessing the Dashboard
            </h2>
          </div>
          <p class="text-black">
            Once installed, access the analytics dashboard at <a
              href="https://your-domain.com/"
              class="text-blue-600 hover:underline break-words"
              >https://your-domain.com/</a
            >. This step applies to both installation methods.
          </p>
        </section>

        <!-- Administrative Operations Section -->
        <section id="administrative-operations" class="mb-12">
          <div class="flex items-start mb-6">
            <h2 class="text-3xl font-bold text-black">
              Administrative Operations
            </h2>
          </div>
          <p class="text-black mb-3">
            Manage your Infinity Metrics installation with the following
            administrative commands.
          </p>

          <div class="space-y-6">
            <div>
              <h3 class="text-xl font-semibold mb-3 text-black">
                Password Reset
              </h3>
              <p class="text-black mb-3">
                To reset or change the admin password, run the following command
                with sudo privileges:
              </p>
              <div
                class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed md:leading-relaxed sm:leading-relaxed sm:overflow-x-auto sm:whitespace-normal sm:text-xs"
              >
                <pre
                  class="whitespace-pre-wrap break-all"><code class="text-white">{changeAdminPasswordCommand}</code></pre>
              </div>
            </div>

            <div>
              <h3 class="text-xl font-semibold mb-3 text-black">
                Forced Updates
              </h3>
              <p class="text-black mb-3">
                To manually force an update of Infinity Metrics, run the
                following command with sudo privileges:
              </p>
              <div
                class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed md:leading-relaxed sm:leading-relaxed sm:overflow-x-auto sm:whitespace-normal sm:text-xs"
              >
                <pre
                  class="whitespace-pre-wrap break-all"><code class="text-white">{forceUpdateCommand}</code></pre>
              </div>
            </div>
          </div>
        </section>

        <!-- Server Requirements Section -->
        <section id="server-requirements" class="mb-16">
          <div class="flex items-start mb-6">
            <h2 class="text-3xl font-bold text-black">Server Requirements</h2>
          </div>
          <p class="text-black mb-3">
            Infinity Metrics is designed to run efficiently with minimal server
            resources. You can get started with very modest specifications.
          </p>

          <div class="space-y-6">
            <div class="card p-6 rounded-xl shadow-sm">
              <h3 class="text-xl font-semibold mb-5 text-black">
                Minimum Requirements
              </h3>
              <ul class="space-y-3 text-black">
                <li><strong>CPU:</strong> 1 vCPU/Core</li>
                <li><strong>RAM:</strong> 512MB (sufficient to get started)</li>
                <li><strong>Storage:</strong> 10GB SSD</li>
              </ul>
            </div>

            <div class="card p-6 rounded-xl shadow-sm">
              <h3 class="text-xl font-semibold mb-5 text-black">
                Network Requirements
              </h3>
              <ul class="space-y-3 text-black">
                <li>
                  <strong>Inbound:</strong> Ports 80 (HTTP) and 443 (HTTPS) must
                  be open for Let's Encrypt certificate setup, verification, and
                  normal operations
                </li>
                <li>
                  <strong>Outbound:</strong> General internet access required for
                  Let's Encrypt certificate renewal and OpenAI API communication
                </li>
                <li>
                  <strong>SSL Certificate:</strong> Automatically provisioned during
                  installation with Let's Encrypt (for automated installer) or configured
                  manually
                </li>
              </ul>
            </div>
          </div>
        </section>

        <!-- SDK Usage Section -->
        <section id="sdk-usage" class="mb-12">
          <div class="flex items-start mb-6">
            <h2 class="text-3xl font-bold text-black">SDK Usage</h2>
          </div>
          <p class="text-black mb-3">
            Our lightweight JavaScript SDK makes it easy to capture analytics
            data from your websites.
          </p>

          <!-- Including the SDK -->
          <section id="sdk-include" class="mb-10">
            <h3 class="text-2xl font-semibold mb-5 text-black">
              Including the SDK
            </h3>
            <p class="text-black mb-3">
              Add the following script tag to the <code
                class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                >&lt;head&gt;&lt;/head&gt;</code
              > section of your website. Replace <code
                class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                >your-domain.com</code
              > with the domain where you installed Infinity Metrics.
            </p>

            <div
              class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed md:leading-relaxed sm:leading-relaxed sm:overflow-x-auto sm:whitespace-normal sm:text-xs mb-6"
            >
              <pre
                class="whitespace-pre-wrap break-all"><code class="text-white">{sdkIncludeScript}</code></pre>
            </div>

            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg
                    class="h-5 w-5 text-yellow-400"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"
                      clip-rule="evenodd"></path>
                  </svg>
                </div>
                <div class="ml-3">
                  <p class="text-sm text-yellow-700 font-semibold">
                    For optimal data collection, place the script as early as
                    possible in the <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >&lt;head&gt;&lt;/head&gt;</code
                    > of your HTML document.
                  </p>
                </div>
              </div>
            </div>

            <!-- SDK Configuration -->
            <section id="sdk-configuration" class="mb-10">
              <h3 class="text-2xl font-semibold mb-5 text-black">
                SDK Configuration
              </h3>
              <p class="text-black mb-3">
                The Infinity Metrics SDK comes with sensible defaults, but you
                can customize its behavior by modifying the configuration
                options.
              </p>

              <div
                class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed md:leading-relaxed sm:leading-relaxed sm:overflow-x-auto sm:whitespace-normal sm:text-xs mb-6"
              >
                <pre
                  class="whitespace-pre-wrap break-all"><code class="language-javascript text-white">{sdkConfigCode}</code></pre>
              </div>

              <h4 class="text-lg font-semibold mb-3 text-black">
                Configuration Options
              </h4>
              <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200 mb-6">
                  <thead class="bg-gray-50">
                    <tr>
                      <th
                        scope="col"
                        class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                        >Option</th
                      >
                      <th
                        scope="col"
                        class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                        >Default</th
                      >
                      <th
                        scope="col"
                        class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                        >Description</th
                      >
                    </tr>
                  </thead>
                  <tbody class="bg-white divide-y divide-gray-200">
                    <tr>
                      <td
                        class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"
                        >respectDoNotTrack</td
                      >
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-black"
                        >true</td
                      >
                      <td class="px-6 py-4 text-sm text-black"
                        >Honor the browser's Do Not Track setting</td
                      >
                    </tr>
                    <tr>
                      <td
                        class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"
                        >autoInstrumentButtons</td
                      >
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-black"
                        >true</td
                      >
                      <td class="px-6 py-4 text-sm text-black"
                        >Automatically track button clicks</td
                      >
                    </tr>
                    <tr>
                      <td
                        class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"
                        >autoSendPageViews</td
                      >
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-black"
                        >true</td
                      >
                      <td class="px-6 py-4 text-sm text-black"
                        >Automatically send page views</td
                      >
                    </tr>
                    <tr>
                      <td
                        class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"
                        >debug</td
                      >
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-black"
                        >false</td
                      >
                      <td class="px-6 py-4 text-sm text-black"
                        >Enable debug logging to console</td
                      >
                    </tr>
                  </tbody>
                </table>
              </div>
            </section>

            <!-- Automated Tracking -->
            <section id="auto-tracking" class="mb-10">
              <h3 class="text-2xl font-semibold mb-5 text-black">
                Automated Tracking
              </h3>
              <p class="text-black mb-3">
                By default, Infinity Metrics automatically tracks the following
                without any additional code:
              </p>

              <div class="space-y-6 mb-6">
                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">Page Views</h4>
                  <p class="text-black">
                    Every page load is automatically tracked.
                  </p>
                </div>

                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">
                    Single-Page Application (SPA) Navigation
                  </h4>
                  <p class="text-black">
                    The SDK automatically detects navigation changes in SPAs by
                    monitoring history state and popstate events, treating them
                    as new page views. It supports React, Vue, and Angular.
                  </p>
                </div>

                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">Button Clicks</h4>
                  <p class="text-black">
                    When auto-instrumentation is enabled (default), clicks on <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >&lt;button&gt;</code
                    > elements, <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >&lt;input type="button"&gt;</code
                    >, <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >&lt;input type="submit"&gt;</code
                    >, and any element with <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >role="button"</code
                    > are automatically tracked.
                  </p>

                  <div class="mt-4 mb-4">
                    <h5 class="font-medium mb-2 text-black">
                      Automatic Event Naming
                    </h5>
                    <p class="text-black">
                      By default, button events are named using the pattern: <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >click:button:sanitized_text:button_id</code
                      >. Here's how it's constructed:
                    </p>
                    <ul
                      class="list-disc list-inside text-black mt-2 space-y-1 pl-4"
                    >
                      <li>
                        <code
                          class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                          >sanitized_text</code
                        >: Derived from the button's visible text. The system
                        prioritizes <code
                          class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                          >textContent</code
                        >, then <code
                          class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                          >value</code
                        >, then <code
                          class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                          >title</code
                        >. This text is then sanitized: converted to lowercase,
                        spaces replaced with underscores, non-alphanumeric
                        characters (except underscores) removed, and truncated
                        to 50 characters. If no text is found or sanitization
                        results in an empty string, it defaults to
                        "unnamed_button".
                      </li>
                      <li>
                        <code
                          class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                          >button_id</code
                        >: The <code
                          class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                          >id</code
                        > attribute of the button. If the button has no ID, this
                        defaults to "noid".
                      </li>
                    </ul>
                    <p class="text-black mt-2">
                      For example, <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >&lt;button id="myBtn"&gt;Submit&lt;/button&gt;</code
                      > would generate an event named <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >click:button:submit:mybtn</code
                      >.
                    </p>
                  </div>

                  <div class="mt-4 mb-4">
                    <h5 class="font-medium mb-2 text-black">
                      Custom Event Names
                    </h5>
                    <p class="text-black">
                      You can override the automatic naming by adding the <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-event-name</code
                      > attribute to your button. This is useful for standardizing
                      event names across your application or tracking specific user
                      actions.
                    </p>
                    <div
                      class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full"
                    >
                      <pre
                        class="whitespace-pre-wrap break-all"><code class="language-html text-white">&lt;button data-infinity-event-name="newsletter_signup"&gt;
  Subscribe to Newsletter
&lt;/button&gt;

&lt;button data-infinity-event-name="download_started"&gt;
  Download App
&lt;/button&gt;</code></pre>
                    </div>
                  </div>

                  <div class="mt-4 mb-4">
                    <h5 class="font-medium mb-2 text-black">Custom Metadata</h5>
                    <p class="text-black">
                      Add custom metadata to button events using <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-metadata-*</code
                      > attributes. This allows you to capture additional context
                      about the user's action.
                    </p>
                    <div
                      class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full"
                    >
                      <pre
                        class="whitespace-pre-wrap break-all"><code class="language-html text-white">&lt;button 
  data-infinity-event-name="product_purchased"
  data-infinity-metadata-product="premium_plan"
  data-infinity-metadata-price="29.99"
  data-infinity-metadata-billing="monthly"&gt;
  Buy Premium Plan
&lt;/button&gt;</code></pre>
                    </div>
                  </div>

<<<<<<< HEAD:src/pages/docs.astro
                  <div class="mt-4 mb-4">
                    <h5 class="font-medium mb-2 text-black">
                      Purchase Tracking
                    </h5>
                    <p class="text-black">
                      You can automatically track purchases by setting <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-event-name="revenue:purchased"</code
                      > on buttons. This creates standardized purchase events that
                      integrate with your revenue analytics. See the <a
                        href="#purchase-tracking"
                        class="text-blue-600 hover:underline"
                        >Purchase Tracking section</a
                      > for complete details and examples.
                    </p>
                  </div>

                  <p class="text-sm text-gray-600 mt-2">
                    Note: If an <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >&lt;a&gt;</code
                    > tag is styled like a button but includes the <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >data-infinity-event-name</code
                    > attribute, it will be handled by Link Event Tracking (see below)
                    to avoid duplication, and this general button tracking will defer.
                  </p>
                </div>

                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">
                    Link Event Tracking
                  </h4>
                  <p class="text-black mb-2">
                    Track clicks on specific links declaratively by adding <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >data-</code
                    > attributes to your <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >&lt;a&gt;</code
                    > tags. This is useful for CTAs or important navigational elements.
                    This method takes priority over general button click tracking
                    for <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >&lt;a&gt;</code
                    > tags to prevent double counting.
                  </p>
                  <ul class="list-disc list-inside text-black mt-2 space-y-1">
                    <li>
                      <strong>Activation:</strong> Add <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-event-name</code
                      > to the link.
                    </li>
                    <li>
                      <strong>Event Naming:</strong> The value of <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-event-name</code
                      > is used directly as the event name (no sanitization for custom
                      names).
                    </li>
                    <li>
                      <strong>Automatic Metadata:</strong>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >href</code
                      > (link URL) and <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >text</code
                      > (link text).
                    </li>
                    <li>
                      <strong>Custom Metadata:</strong> Use attributes like <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-metadata-yourkey="value"</code
                      >.
                    </li>
                  </ul>

                  <div class="mt-4 mb-4">
                    <h5 class="font-medium mb-2 text-black">
                      Navigation Links
                    </h5>
                    <p class="text-black">
                      For links that navigate to other pages, the SDK
                      automatically uses <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >navigator.sendBeacon()</code
                      > to ensure the event is sent even if the user navigates away
                      immediately. This provides reliable tracking for navigation
                      events.
                    </p>
                  </div>

                  <div class="mt-4 mb-4">
                    <h5 class="font-medium mb-2 text-black">Basic Example</h5>
                    <div
                      class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full"
                    >
                      <pre
                        class="whitespace-pre-wrap break-all"><code class="language-html text-white">{dataDrivenLinkExample}</code></pre>
                    </div>
                  </div>

                  <div class="mt-4 mb-4">
                    <h5 class="font-medium mb-2 text-black">
                      Common Use Cases
                    </h5>
                    <div
                      class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full"
                    >
                      <pre
                        class="whitespace-pre-wrap break-all"><code class="language-html text-white">&lt;!-- Track external link clicks --&gt;
&lt;a href="https://partner.com" 
   data-infinity-event-name="external_link_clicked"
   data-infinity-metadata-partner="partner_name"&gt;
   Visit Partner Site
&lt;/a&gt;

&lt;!-- Track CTA clicks --&gt;
&lt;a href="/signup" 
   data-infinity-event-name="cta_clicked"
   data-infinity-metadata-location="header"
   data-infinity-metadata-variant="primary"&gt;
   Get Started
&lt;/a&gt;

&lt;!-- Track download events --&gt;
&lt;a href="/download/app.zip" 
   data-infinity-event-name="download_started"
   data-infinity-metadata-file="mobile_app"
   data-infinity-metadata-version="1.2.0"&gt;
   Download App
&lt;/a&gt;</code></pre>
                    </div>
                  </div>
                </div>

                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">Offline Support</h4>
                  <p class="text-black">
                    The SDK automatically detects when the user is offline and
                    stores events locally for a reasonable period of time. When
                    the connection is restored, it will send the stored events
                    to the server.
                  </p>
                </div>
              </div>
            </section>

            <!-- Manual Tracking -->
            <section id="manual-tracking" class="mb-10">
              <h3 class="text-2xl font-semibold mb-5 text-black">
                Manual Tracking
              </h3>
              <p class="text-black mb-3">
                For custom events, user actions, or additional data collection,
                you can use our JavaScript API.
              </p>

              <div class="space-y-6 mb-6">
                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">Custom Events</h4>
                  <p class="text-black">
                    Track specific user interactions or milestones not covered
                    by automated tracking using the <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >sendCustomEvent</code
                    > function.
                  </p>
                  <p class="text-black mt-2">
                    Syntax: <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >InfinityMetrics.sendCustomEvent(eventName, metadata)</code
                    >
                  </p>
                  <ul
                    class="list-disc list-inside text-black mt-2 space-y-1 pl-4"
                  >
                    <li>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >eventName</code
                      > (string): A unique name for your event (e.g., "trial_started",
                      "file_downloaded").
                    </li>
                    <li>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >metadata</code
                      > (object): An object containing any additional dynamic information
                      relevant to the event. You can include any key-value pairs,
                      for example,
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >&lbrace; plan: "premium", fileName: "report.pdf"
                        &rbrace;</code
                      >. This data will be available in your analytics.
                    </li>
                  </ul>
                  <p class="text-black mt-3 font-medium">Example:</p>
                  <div
                    class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full"
                  >
                    <pre
                      class="whitespace-pre-wrap break-all"><code class="text-white">InfinityMetrics.sendCustomEvent("video_played", &lbrace; videoTitle: "Product Demo", durationWatched: "60s" &rbrace;);</code></pre>
                  </div>
                </div>

                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">
                    Manual Page Views
                  </h4>
                  <p class="text-black">
                    SPA frameworks could fail to automatically trigger page
                    views changes, you can do it manually like this:
                  </p>
                  <div
                    class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full"
                  >
                    <pre
                      class="whitespace-pre-wrap break-all"><code class="language-javascript text-white">{manualPageView}</code></pre>
                  </div>
                </div>
              </div>
            </section>

            <!-- Purchase Tracking -->
            <section id="purchase-tracking" class="mb-10">
              <h3 class="text-2xl font-semibold mb-5 text-black">
                Purchase Tracking
              </h3>
              <p class="text-black mb-3">
                Track revenue events and purchases with InfinityMetrics'
                built-in purchase tracking functionality. This provides
                standardized revenue analytics and integrates seamlessly with
                your existing analytics data.
              </p>

              <p class="text-black mb-3">
                InfinityMetrics offers two approaches for purchase tracking:
                programmatic tracking using the <code
                  class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                  >registerPurchase()</code
                > function, and automated tracking using HTML attributes. Both methods
                create the same standardized <code
                  class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                  >revenue:purchased</code
                > events.
              </p>

              <div class="space-y-6 mb-6">
                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">
                    Automated Purchase Tracking
                  </h4>
                  <p class="text-black">
                    Track purchases automatically using HTML attributes by
                    setting <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >data-infinity-event-name="revenue:purchased"</code
                    > on buttons or links. This approach is ideal for checkout flows,
                    payment buttons, purchase links, or any purchase-related actions
                    that can be tracked declaratively.
                  </p>
                  <p class="text-black mt-2">Required metadata attributes:</p>
                  <ul
                    class="list-disc list-inside text-black mt-2 space-y-1 pl-4"
                  >
                    <li>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-metadata-price</code
                      >: Price in cents (e.g., 1999 for $19.99)
                    </li>
                    <li>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-metadata-currency</code
                      >: Currency code (e.g., USD, EUR)
                    </li>
                  </ul>
                  <p class="text-black mt-2">Optional metadata attributes:</p>
                  <ul
                    class="list-disc list-inside text-black mt-2 space-y-1 pl-4"
                  >
                    <li>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-metadata-quantity</code
                      >: Number of items (defaults to 1)
                    </li>
                    <li>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-metadata-product</code
                      >: Product identifier or name
                    </li>
                    <li>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >data-infinity-metadata-category</code
                      >: Product category
                    </li>
                  </ul>
                  <div
                    class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-4 max-w-full"
                  >
                    <pre
                      class="whitespace-pre-wrap break-all"><code class="language-html text-white">&lt;!-- Button example --&gt;
&lt;button 
  data-infinity-event-name="revenue:purchased"
  data-infinity-metadata-price="2999"
  data-infinity-metadata-currency="USD"
  data-infinity-metadata-product="premium_plan"
  data-infinity-metadata-quantity="1"
  data-infinity-metadata-category="subscription"&gt;
  Purchase Premium Plan
&lt;/button&gt;

&lt;!-- Link example --&gt;
&lt;a href="/checkout/complete"
  data-infinity-event-name="revenue:purchased"
  data-infinity-metadata-price="4999"
  data-infinity-metadata-currency="USD"
  data-infinity-metadata-product="yearly_subscription"
  data-infinity-metadata-quantity="1"&gt;
  Complete Purchase
&lt;/a&gt;</code></pre>
                  </div>
                </div>

                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">
                    registerPurchase Function
                  </h4>
                  <p class="text-black">
                    The <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >registerPurchase</code
                    > function automatically creates a <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >revenue:purchased</code
                    > custom event with standardized purchase data. This ensures
                    consistent revenue tracking across your entire application.
                  </p>
                  <p class="text-black mt-2">
                    Syntax: <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >InfinityMetrics.registerPurchase(priceInCents, currency,
                      metadata)</code
                    >
                  </p>
                  <ul
                    class="list-disc list-inside text-black mt-2 space-y-1 pl-4"
                  >
                    <li>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >priceInCents</code
                      > (number, required): The purchase price in cents (e.g., 1999
                      for $19.99). Must be a positive number.
                    </li>
                    <li>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >currency</code
                      > (string, optional): Currency code following ISO 4217 standard
                      (defaults to 'USD').
                    </li>
                    <li>
                      <code
                        class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                        >metadata</code
                      > (object, optional): Additional purchase information like
                      product details, quantity, categories, etc.
                    </li>
                  </ul>
                </div>

                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">Basic Usage</h4>
                  <p class="text-black">
                    Track a simple purchase with just the price and currency:
                  </p>
                  <div
                    class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full"
                  >
                    <pre
                      class="whitespace-pre-wrap break-all"><code class="text-white">{registerPurchaseSimple}</code></pre>
                  </div>
                  <p class="text-black mt-3 text-sm">
                    This creates a <code
                      class="bg-black text-white px-2 py-1 rounded text-sm font-mono"
                      >revenue:purchased</code
                    > event with price: 1999, currency: 'USD', and quantity: 1 (default).
                  </p>
                </div>

                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">
                    Advanced Usage with Metadata
                  </h4>
                  <p class="text-black">
                    Include additional product and purchase information for
                    detailed revenue analytics:
                  </p>
                  <div
                    class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full"
                  >
                    <pre
                      class="whitespace-pre-wrap break-all"><code class="text-white">{registerPurchaseWithMetadata}</code></pre>
                  </div>
                  <p class="text-black mt-3 text-sm">
                    The metadata object can include any additional fields
                    relevant to your business such as:
                  </p>
                  <ul
                    class="list-disc list-inside text-black mt-2 space-y-1 pl-4 text-sm"
                  >
                    <li>
                      <strong>productId</strong>: Unique product identifier
                    </li>
                    <li>
                      <strong>productName</strong>: Human-readable product name
                    </li>
                    <li><strong>category</strong>: Product category or type</li>
                    <li>
                      <strong>quantity</strong>: Number of items purchased
                      (defaults to 1)
                    </li>
                    <li>
                      <strong>discountCode</strong>: Applied discount or promo
                      code
                    </li>
                    <li><strong>paymentMethod</strong>: Payment method used</li>
                  </ul>
                </div>

                <div class="card p-5 rounded-xl shadow-sm">
                  <h4 class="font-semibold mb-2 text-black">
                    Integration Examples
                  </h4>
                  <p class="text-black mb-3">
                    Common integration patterns for different scenarios:
                  </p>

                  <h5 class="font-medium mb-2 text-black">
                    E-commerce Checkout
                  </h5>
                  <div
                    class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full mb-4"
                  >
                    <pre
                      class="whitespace-pre-wrap break-all"><code class="text-white">// After successful payment processing
InfinityMetrics.registerPurchase(2999, 'USD', &lbrace;
  productId: 'widget-pro-123',
  productName: 'Widget Pro',
  category: 'software',
  quantity: 1,
  discountCode: 'SAVE20',
  paymentMethod: 'stripe'
&rbrace;);</code></pre>
                  </div>

                  <h5 class="font-medium mb-2 text-black">
                    Subscription Purchase
                  </h5>
                  <div
                    class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full mb-4"
                  >
                    <pre
                      class="whitespace-pre-wrap break-all"><code class="text-white">// Monthly subscription signup
InfinityMetrics.registerPurchase(999, 'USD', &lbrace;
  productId: 'plan-monthly',
  productName: 'Monthly Plan',
  category: 'subscription',
  billingCycle: 'monthly',
  planType: 'premium'
&rbrace;);</code></pre>
                  </div>

                  <h5 class="font-medium mb-2 text-black">Digital Download</h5>
                  <div
                    class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full"
                  >
                    <pre
                      class="whitespace-pre-wrap break-all"><code class="text-white">// Digital product purchase
InfinityMetrics.registerPurchase(1999, 'USD', &lbrace;
  productId: 'ebook-advanced-js',
  productName: 'Advanced JavaScript Guide',
  category: 'digital-content',
  format: 'pdf',
  fileSize: '2.5MB'
&rbrace;);</code></pre>
                  </div>
                </div>
              </div>
            </section>
          </section>
        </section>
      </div>
    </div>
    <Footer />
  </main>
=======
									<div class="card p-5 rounded-xl shadow-sm">
										<h4 class="font-semibold mb-2 text-black">
											Manual Page Views
										</h4>
										<p class="text-black">
											SPA frameworks could fail to automatically trigger page
											views changes, you can do it manually like this:
										</p>
										<div
											class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed mt-2 max-w-full"
										>
											<pre class="whitespace-pre-wrap break-all"><code class="language-javascript text-white">{manualPageView}</code></pre>
										</div>
									</div>
								</div>
							</section>
						</section>
					</section>
				</section>

				<!-- Framework Installation Guides Section -->
				<section id="framework-guides" class="mb-12">
					<div class="flex items-start mb-6">
						<h2 class="text-3xl font-bold text-black">Framework Installation Guides</h2>
					</div>
					<p class="text-black mb-6">
						Follow these step-by-step guides to integrate Infinity Metrics with your preferred framework or platform.
					</p>

					<!-- Next.js Guide -->
					<section id="nextjs-guide" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black flex items-center">
								<span class="mr-3">⚡</span>
								Next.js
							</h3>
							<p class="text-black mb-4">
								Add Infinity Metrics to your Next.js application using the App Router or Pages Router.
							</p>
							<div class="space-y-4">
								<h4 class="text-lg font-semibold text-black">App Router (Recommended)</h4>
								<p class="text-black">
									Add the tracking script to your root layout file:
								</p>
								<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
									<pre class="whitespace-pre-wrap break-all"><code class="text-white">{frameworkGuides.nextjs}</code></pre>
								</div>
								<div class="bg-blue-50 border-l-4 border-blue-400 p-4 mt-4">
									<p class="text-sm text-blue-700">
										<strong>Alternative:</strong> You can also add the script directly to your <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">app/layout.tsx</code> in the <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">&lt;head&gt;</code> section.
									</p>
								</div>
							</div>
						</div>
					</section>

					<!-- React Guide -->
					<section id="react-guide" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black flex items-center">
								<span class="mr-3">⚛️</span>
								React
							</h3>
							<p class="text-black mb-4">
								Add Infinity Metrics to your React application by injecting the script into your root component.
							</p>
							<div class="space-y-4">
								<h4 class="text-lg font-semibold text-black">Root Component Method</h4>
								<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
									<pre class="whitespace-pre-wrap break-all"><code class="text-white">{frameworkGuides.react}</code></pre>
								</div>
								<div class="bg-blue-50 border-l-4 border-blue-400 p-4 mt-4">
									<p class="text-sm text-blue-700">
										<strong>Alternative:</strong> You can also add the script directly to your <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">public/index.html</code> file in the <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">&lt;head&gt;</code> section.
									</p>
								</div>
							</div>
						</div>
					</section>

					<!-- Vue.js Guide -->
					<section id="vue-guide" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black flex items-center">
								<span class="mr-3">🌟</span>
								Vue.js
							</h3>
							<p class="text-black mb-4">
								Add Infinity Metrics to your Vue.js application using the mounted lifecycle hook.
							</p>
							<div class="space-y-4">
								<h4 class="text-lg font-semibold text-black">App.vue Method</h4>
								<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
									<pre class="whitespace-pre-wrap break-all"><code class="text-white">{frameworkGuides.vue}</code></pre>
								</div>
								<div class="bg-blue-50 border-l-4 border-blue-400 p-4 mt-4">
									<p class="text-sm text-blue-700">
										<strong>For Nuxt.js:</strong> See the <a href="#nuxt-guide" class="text-blue-600 underline">Nuxt.js section</a> below for the recommended approach.
									</p>
								</div>
							</div>
						</div>
					</section>

					<!-- Angular Guide -->
					<section id="angular-guide" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black flex items-center">
								<span class="mr-3">🅰️</span>
								Angular
							</h3>
							<p class="text-black mb-4">
								Add Infinity Metrics to your Angular application using the OnInit lifecycle hook.
							</p>
							<div class="space-y-4">
								<h4 class="text-lg font-semibold text-black">App Component Method</h4>
								<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
									<pre class="whitespace-pre-wrap break-all"><code class="text-white">{frameworkGuides.angular}</code></pre>
								</div>
								<div class="bg-blue-50 border-l-4 border-blue-400 p-4 mt-4">
									<p class="text-sm text-blue-700">
										<strong>Alternative:</strong> You can also add the script directly to your <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">src/index.html</code> file in the <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">&lt;head&gt;</code> section.
									</p>
								</div>
							</div>
						</div>
					</section>

					<!-- Django Guide -->
					<section id="django-guide" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black flex items-center">
								<span class="mr-3">🐍</span>
								Django
							</h3>
							<p class="text-black mb-4">
								Add Infinity Metrics to your Django application by including the script in your base template.
							</p>
							<div class="space-y-4">
								<h4 class="text-lg font-semibold text-black">Base Template Method</h4>
								<p class="text-black">
									Add the script to your base template (typically <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">templates/base.html</code>):
								</p>
								<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
									<pre class="whitespace-pre-wrap break-all"><code class="text-white">{frameworkGuides.django}</code></pre>
								</div>
								<div class="bg-green-50 border-l-4 border-green-400 p-4 mt-4">
									<p class="text-sm text-green-700">
										<strong>Pro tip:</strong> You can also use Django settings to dynamically configure the script URL based on your environment.
									</p>
								</div>
							</div>
						</div>
					</section>

					<!-- Laravel Guide -->
					<section id="laravel-guide" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black flex items-center">
								<span class="mr-3">🎼</span>
								Laravel
							</h3>
							<p class="text-black mb-4">
								Add Infinity Metrics to your Laravel application by including the script in your layout blade template.
							</p>
							<div class="space-y-4">
								<h4 class="text-lg font-semibold text-black">Layout Template Method</h4>
								<p class="text-black">
									Add the script to your layout template (typically <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">resources/views/layouts/app.blade.php</code>):
								</p>
								<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
									<pre class="whitespace-pre-wrap break-all"><code class="text-white">{frameworkGuides.laravel}</code></pre>
								</div>
								<div class="bg-green-50 border-l-4 border-green-400 p-4 mt-4">
									<p class="text-sm text-green-700">
										<strong>Pro tip:</strong> You can use Laravel's environment variables to configure the script URL dynamically.
									</p>
								</div>
							</div>
						</div>
					</section>

					<!-- WordPress Guide -->
					<section id="wordpress-guide" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black flex items-center">
								<span class="mr-3">📝</span>
								WordPress
							</h3>
							<p class="text-black mb-4">
								Add Infinity Metrics to your WordPress site by adding code to your theme's functions.php file.
							</p>
							<div class="space-y-4">
								<h4 class="text-lg font-semibold text-black">Functions.php Method</h4>
								<p class="text-black">
									Add the following code to your theme's <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">functions.php</code> file:
								</p>
								<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
									<pre class="whitespace-pre-wrap break-all"><code class="text-white">{frameworkGuides.wordpress}</code></pre>
								</div>
								<div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mt-4">
									<p class="text-sm text-yellow-700">
										<strong>Important:</strong> Make sure to replace <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">your-domain.com</code> with your actual Infinity Metrics domain.
									</p>
								</div>
							</div>
						</div>
					</section>

					<!-- Other Frameworks -->
					<section id="other-frameworks" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black">Other Frameworks</h3>
							<p class="text-black mb-4">
								Here are additional integration examples for other popular frameworks:
							</p>
							
							<div class="space-y-6">
								<!-- Gatsby -->
								<div class="border-l-4 border-gray-300 pl-4">
									<h4 class="text-lg font-semibold text-black mb-2">Gatsby</h4>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">{frameworkGuides.gatsby}</code></pre>
									</div>
								</div>

								<!-- Nuxt.js -->
								<div class="border-l-4 border-gray-300 pl-4" id="nuxt-guide">
									<h4 class="text-lg font-semibold text-black mb-2">Nuxt.js</h4>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">{frameworkGuides.nuxt}</code></pre>
									</div>
								</div>

								<!-- Svelte -->
								<div class="border-l-4 border-gray-300 pl-4">
									<h4 class="text-lg font-semibold text-black mb-2">Svelte</h4>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">{frameworkGuides.svelte}</code></pre>
									</div>
								</div>
							</div>
						</div>
					</section>

					<!-- Verification -->
					<div class="bg-green-50 border-l-4 border-green-400 p-6 rounded-r-xl">
						<h4 class="text-lg font-semibold text-green-800 mb-2">Verify Your Installation</h4>
						<p class="text-green-700 mb-3">
							After implementing any of the above methods:
						</p>
						<ul class="list-disc list-inside text-green-700 space-y-1">
							<li>Visit your live website</li>
							<li>Check your Infinity Metrics dashboard for incoming data</li>
							<li>It might take a few minutes for the first pageviews to appear</li>
							<li>Use browser developer tools to ensure the script loads without errors</li>
						</ul>
					</div>
				</section>

				<!-- Advanced Features Section -->
				<section id="advanced-features" class="mb-12">
					<div class="flex items-start mb-6">
						<h2 class="text-3xl font-bold text-black">Advanced Features</h2>
					</div>
					<p class="text-black mb-6">
						Unlock the full potential of Infinity Metrics with these advanced tracking capabilities.
					</p>

					<!-- Subdomain Tracking -->
					<section id="subdomain-tracking" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black">Subdomain Tracking</h3>
							<p class="text-black mb-4">
								Track visitors across multiple subdomains as a single website. This is useful for applications with separate subdomains for different sections (e.g., <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">app.yoursite.com</code>, <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">blog.yoursite.com</code>).
							</p>
							
							<div class="space-y-4">
								<h4 class="text-lg font-semibold text-black">Configuration</h4>
								<p class="text-black">
									Enable subdomain tracking by configuring the SDK before it loads:
								</p>
								<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
									<pre class="whitespace-pre-wrap break-all"><code class="text-white">{subdomainConfig}</code></pre>
								</div>
								
								<div class="bg-blue-50 border-l-4 border-blue-400 p-4 mt-4">
									<h5 class="text-sm font-semibold text-blue-800 mb-2">Key Points:</h5>
									<ul class="text-sm text-blue-700 space-y-1">
										<li>• Use a leading dot in the domain configuration (e.g., <code class="bg-black text-white px-2 py-1 rounded text-sm font-mono">.yoursite.com</code>)</li>
										<li>• This will track all subdomains under your main domain</li>
										<li>• Sessions will be maintained across subdomain navigation</li>
										<li>• All subdomains must have the same tracking script installed</li>
									</ul>
								</div>
							</div>
						</div>
					</section>

					<!-- Revenue Tracking -->
					<section id="revenue-tracking" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black">Revenue Tracking</h3>
							<p class="text-black mb-4">
								Track revenue and conversion data to understand the financial impact of your marketing efforts and user behavior.
							</p>
							
							<div class="space-y-6">
								<div class="border-l-4 border-green-400 pl-4">
									<h4 class="text-lg font-semibold text-black mb-2">Basic Purchase Tracking</h4>
									<p class="text-black mb-3">
										Track simple purchases with revenue, currency, and product information:
									</p>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">{revenueTrackingExamples.basic}</code></pre>
									</div>
								</div>

								<div class="border-l-4 border-blue-400 pl-4">
									<h4 class="text-lg font-semibold text-black mb-2">Detailed Purchase Tracking</h4>
									<p class="text-black mb-3">
										Include comprehensive metadata for advanced analytics:
									</p>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">{revenueTrackingExamples.detailed}</code></pre>
									</div>
								</div>

								<div class="border-l-4 border-purple-400 pl-4">
									<h4 class="text-lg font-semibold text-black mb-2">Subscription Tracking</h4>
									<p class="text-black mb-3">
										Track subscription-based revenue and lifecycle events:
									</p>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">{revenueTrackingExamples.subscription}</code></pre>
									</div>
								</div>

								<div class="border-l-4 border-orange-400 pl-4">
									<h4 class="text-lg font-semibold text-black mb-2">Lead Value Tracking</h4>
									<p class="text-black mb-3">
										Track potential revenue from leads and prospects:
									</p>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">{revenueTrackingExamples.leadValue}</code></pre>
									</div>
								</div>
							</div>

							<div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mt-6">
								<h5 class="text-sm font-semibold text-yellow-800 mb-2">Best Practices:</h5>
								<ul class="text-sm text-yellow-700 space-y-1">
									<li>• Always include currency with revenue amounts</li>
									<li>• Use consistent event names across your application</li>
									<li>• Include customer IDs for better user journey tracking</li>
									<li>• Track both successful and failed transactions</li>
									<li>• Consider tracking refunds and cancellations</li>
								</ul>
							</div>
						</div>
					</section>

					<!-- Custom Events -->
					<section id="custom-events" class="mb-10">
						<div class="card p-6 rounded-xl shadow-sm">
							<h3 class="text-2xl font-semibold mb-4 text-black">Custom Events</h3>
							<p class="text-black mb-4">
								Track specific user actions and business events that matter to your application beyond basic page views and clicks.
							</p>
							
							<div class="space-y-6">
								<div class="border-l-4 border-indigo-400 pl-4">
									<h4 class="text-lg font-semibold text-black mb-2">User Engagement Events</h4>
									<p class="text-black mb-3">
										Track how users interact with your content:
									</p>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">// Video engagement
window.InfinityMetrics.sendCustomEvent('video_played', {
  videoId: 'intro-video',
  videoTitle: 'Product Introduction',
  duration: 120,
  position: 'homepage'
});

// File downloads
window.InfinityMetrics.sendCustomEvent('file_download', {
  fileName: 'whitepaper.pdf',
  fileSize: '2.5MB',
  downloadSource: 'blog_post'
});

// Form interactions
window.InfinityMetrics.sendCustomEvent('form_started', {
  formId: 'contact-form',
  formType: 'contact',
  page: window.location.pathname
});</code></pre>
									</div>
								</div>

								<div class="border-l-4 border-red-400 pl-4">
									<h4 class="text-lg font-semibold text-black mb-2">Business Milestone Events</h4>
									<p class="text-black mb-3">
										Track important business events and user achievements:
									</p>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">// User registration
window.InfinityMetrics.sendCustomEvent('user_registered', {
  registrationMethod: 'email',
  userType: 'free',
  referralSource: 'google'
});

// Feature usage
window.InfinityMetrics.sendCustomEvent('feature_used', {
  featureName: 'advanced_search',
  userPlan: 'premium',
  usageCount: 5
});

// Goal completion
window.InfinityMetrics.sendCustomEvent('goal_completed', {
  goalType: 'onboarding',
  stepsCompleted: 5,
  totalSteps: 5,
  timeSpent: 180
});</code></pre>
									</div>
								</div>

								<div class="border-l-4 border-teal-400 pl-4">
									<h4 class="text-lg font-semibold text-black mb-2">E-commerce Events</h4>
									<p class="text-black mb-3">
										Track the complete customer journey:
									</p>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">// Product views
window.InfinityMetrics.sendCustomEvent('product_viewed', {
  productId: 'prod-123',
  productName: 'Premium Widget',
  category: 'widgets',
  price: 29.99,
  currency: 'USD'
});

// Cart interactions
window.InfinityMetrics.sendCustomEvent('add_to_cart', {
  productId: 'prod-123',
  quantity: 2,
  value: 59.98,
  currency: 'USD'
});

// Checkout steps
window.InfinityMetrics.sendCustomEvent('checkout_started', {
  cartValue: 59.98,
  itemCount: 2,
  currency: 'USD'
});</code></pre>
									</div>
								</div>

								<div class="border-l-4 border-pink-400 pl-4">
									<h4 class="text-lg font-semibold text-black mb-2">Error and Performance Events</h4>
									<p class="text-black mb-3">
										Track technical issues and performance metrics:
									</p>
									<div class="bg-black p-4 rounded-md font-mono text-sm overflow-x-auto leading-relaxed">
										<pre class="whitespace-pre-wrap break-all"><code class="text-white">// Error tracking
window.InfinityMetrics.sendCustomEvent('error_occurred', {
  errorType: 'javascript_error',
  errorMessage: 'TypeError: Cannot read property',
  page: window.location.pathname,
  userAgent: navigator.userAgent
});

// Performance tracking
window.InfinityMetrics.sendCustomEvent('page_load_time', {
  loadTime: 1250,
  page: window.location.pathname,
  connectionType: 'fast'
});</code></pre>
									</div>
								</div>
							</div>

							<div class="bg-green-50 border-l-4 border-green-400 p-4 mt-6">
								<h5 class="text-sm font-semibold text-green-800 mb-2">Event Naming Best Practices:</h5>
								<ul class="text-sm text-green-700 space-y-1">
									<li>• Use clear, descriptive event names (e.g., "video_played" not "vp")</li>
									<li>• Use consistent naming conventions (snake_case recommended)</li>
									<li>• Include relevant context in metadata</li>
									<li>• Keep event names under 50 characters</li>
									<li>• Group related events with prefixes (e.g., "checkout_started", "checkout_completed")</li>
								</ul>
							</div>
						</div>
					</section>
				</section>
			</div>
		</div>
		<Footer />
	</main>
>>>>>>> 96fe8b6 (WIP):_docs.astro.old
</Layout>
